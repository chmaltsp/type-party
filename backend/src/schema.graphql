# import Website from "./generated/prisma.graphql"
# import File from "./generated/prisma.graphql"
# import Role from "./generated/prisma.graphql"

scalar Upload

directive @isAuthenticated on FIELD_DEFINITION | QUERY | MUTATION

directive @hasRole(
  requires: [Role] = SUBSCRIBER
) on FIELD_DEFINITION | QUERY | MUTATION

directive @isOwner(
  type: String!
  field: String
) on FIELD_DEFINITION | QUERY | MUTATION


type Query {
  me: User @isAuthenticated
  users: [User!]! @hasRole(requires: [ADMIN, SUBSCRIBER])
  websites: [Website!]!
  userWebsites: [Website!]! 
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  addWebsite(title: String!, thumbnail: String!, url: String!, image: String): Website!
  uploadImage(file: Upload!): File
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  name: String!
  role: Role
  websites: [Website!]!
}