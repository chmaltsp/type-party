{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "TpEcr": {
        "id": "TpEcr",
        "path": "TpEcr",
        "children": {
          "tp-api": {
            "id": "tp-api",
            "path": "TpEcr/tp-api",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "TpEcr/tp-api/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECR::Repository",
                  "aws:cdk:cloudformation:props": {
                    "lifecyclePolicy": {
                      "lifecyclePolicyText": "{\"rules\":[{\"rulePriority\":1,\"selection\":{\"tagStatus\":\"any\",\"countType\":\"imageCountMoreThan\",\"countNumber\":9999},\"action\":{\"type\":\"expire\"}}]}"
                    },
                    "repositoryName": "tp-api"
                  }
                }
              }
            }
          },
          "tp-fe": {
            "id": "tp-fe",
            "path": "TpEcr/tp-fe",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "TpEcr/tp-fe/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECR::Repository",
                  "aws:cdk:cloudformation:props": {
                    "lifecyclePolicy": {
                      "lifecyclePolicyText": "{\"rules\":[{\"rulePriority\":1,\"selection\":{\"tagStatus\":\"any\",\"countType\":\"imageCountMoreThan\",\"countNumber\":9999},\"action\":{\"type\":\"expire\"}}]}"
                    },
                    "repositoryName": "tp-fe"
                  }
                }
              }
            }
          }
        }
      },
      "tp-vpc-dev": {
        "id": "tp-vpc-dev",
        "path": "tp-vpc-dev",
        "children": {
          "tp-vpc-dev": {
            "id": "tp-vpc-dev",
            "path": "tp-vpc-dev/tp-vpc-dev",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "tp-vpc-dev/tp-vpc-dev/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "tp-vpc-dev/tp-vpc-dev"
                      }
                    ]
                  }
                }
              },
              "PublicSubnet1": {
                "id": "PublicSubnet1",
                "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/18",
                        "vpcId": {
                          "Ref": "tpvpcdev26ADF65F"
                        },
                        "availabilityZone": "us-east-1a",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "tpvpcdev26ADF65F"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "tpvpcdevPublicSubnet1RouteTable991595E2"
                        },
                        "subnetId": {
                          "Ref": "tpvpcdevPublicSubnet1Subnet68E7FBEC"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "tpvpcdevPublicSubnet1RouteTable991595E2"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "tpvpcdevIGWCC25A79E"
                        }
                      }
                    }
                  },
                  "NatInstance": {
                    "id": "NatInstance",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1/NatInstance",
                    "children": {
                      "InstanceProfile": {
                        "id": "InstanceProfile",
                        "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1/NatInstance/InstanceProfile",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                          "aws:cdk:cloudformation:props": {
                            "roles": [
                              {
                                "Ref": "tpvpcdevNatRole795B805F"
                              }
                            ]
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1/NatInstance/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Instance",
                          "aws:cdk:cloudformation:props": {
                            "availabilityZone": "us-east-1a",
                            "iamInstanceProfile": {
                              "Ref": "tpvpcdevPublicSubnet1NatInstanceInstanceProfile6989F793"
                            },
                            "imageId": "ami-02cb555e324696ced",
                            "instanceType": "t3a.nano",
                            "securityGroupIds": [
                              {
                                "Fn::GetAtt": [
                                  "tpvpcdevNatSecurityGroup60BBDBAD",
                                  "GroupId"
                                ]
                              }
                            ],
                            "sourceDestCheck": false,
                            "subnetId": {
                              "Ref": "tpvpcdevPublicSubnet1Subnet68E7FBEC"
                            },
                            "tags": [
                              {
                                "key": "Name",
                                "value": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1/NatInstance"
                              }
                            ],
                            "userData": {
                              "Fn::Base64": "#!/bin/bash"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "PublicSubnet2": {
                "id": "PublicSubnet2",
                "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.64.0/18",
                        "vpcId": {
                          "Ref": "tpvpcdev26ADF65F"
                        },
                        "availabilityZone": "us-east-1b",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "tpvpcdev26ADF65F"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "tpvpcdevPublicSubnet2RouteTableECE3AEE9"
                        },
                        "subnetId": {
                          "Ref": "tpvpcdevPublicSubnet2Subnet48B24DB2"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "tpvpcdevPublicSubnet2RouteTableECE3AEE9"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "tpvpcdevIGWCC25A79E"
                        }
                      }
                    }
                  },
                  "NatInstance": {
                    "id": "NatInstance",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2/NatInstance",
                    "children": {
                      "InstanceProfile": {
                        "id": "InstanceProfile",
                        "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2/NatInstance/InstanceProfile",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                          "aws:cdk:cloudformation:props": {
                            "roles": [
                              {
                                "Ref": "tpvpcdevNatRole795B805F"
                              }
                            ]
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2/NatInstance/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Instance",
                          "aws:cdk:cloudformation:props": {
                            "availabilityZone": "us-east-1b",
                            "iamInstanceProfile": {
                              "Ref": "tpvpcdevPublicSubnet2NatInstanceInstanceProfile72949C18"
                            },
                            "imageId": "ami-02cb555e324696ced",
                            "instanceType": "t3a.nano",
                            "securityGroupIds": [
                              {
                                "Fn::GetAtt": [
                                  "tpvpcdevNatSecurityGroup60BBDBAD",
                                  "GroupId"
                                ]
                              }
                            ],
                            "sourceDestCheck": false,
                            "subnetId": {
                              "Ref": "tpvpcdevPublicSubnet2Subnet48B24DB2"
                            },
                            "tags": [
                              {
                                "key": "Name",
                                "value": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2/NatInstance"
                              }
                            ],
                            "userData": {
                              "Fn::Base64": "#!/bin/bash"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "PrivateSubnet1": {
                "id": "PrivateSubnet1",
                "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.128.0/18",
                        "vpcId": {
                          "Ref": "tpvpcdev26ADF65F"
                        },
                        "availabilityZone": "us-east-1a",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet1"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "tpvpcdev26ADF65F"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "tpvpcdevPrivateSubnet1RouteTableB9B73076"
                        },
                        "subnetId": {
                          "Ref": "tpvpcdevPrivateSubnet1SubnetF419DD00"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "tpvpcdevPrivateSubnet1RouteTableB9B73076"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "instanceId": {
                          "Ref": "tpvpcdevPublicSubnet1NatInstance89D7AC3E"
                        }
                      }
                    }
                  }
                }
              },
              "PrivateSubnet2": {
                "id": "PrivateSubnet2",
                "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.192.0/18",
                        "vpcId": {
                          "Ref": "tpvpcdev26ADF65F"
                        },
                        "availabilityZone": "us-east-1b",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet2"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "tpvpcdev26ADF65F"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "tpvpcdevPrivateSubnet2RouteTable37774948"
                        },
                        "subnetId": {
                          "Ref": "tpvpcdevPrivateSubnet2Subnet25578999"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "tpvpcdevPrivateSubnet2RouteTable37774948"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "instanceId": {
                          "Ref": "tpvpcdevPublicSubnet2NatInstance3A2CEAB2"
                        }
                      }
                    }
                  }
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "tp-vpc-dev/tp-vpc-dev/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "tp-vpc-dev/tp-vpc-dev"
                      }
                    ]
                  }
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "tp-vpc-dev/tp-vpc-dev/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "tpvpcdev26ADF65F"
                    },
                    "internetGatewayId": {
                      "Ref": "tpvpcdevIGWCC25A79E"
                    }
                  }
                }
              },
              "NatSecurityGroup": {
                "id": "NatSecurityGroup",
                "path": "tp-vpc-dev/tp-vpc-dev/NatSecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-vpc-dev/tp-vpc-dev/NatSecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "Security Group for NAT instances",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "securityGroupIngress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "ipProtocol": "tcp",
                            "fromPort": 0,
                            "toPort": 65535,
                            "description": "from 0.0.0.0/0:ALL PORTS"
                          }
                        ],
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-vpc-dev/tp-vpc-dev"
                          }
                        ],
                        "vpcId": {
                          "Ref": "tpvpcdev26ADF65F"
                        }
                      }
                    }
                  }
                }
              },
              "NatRole": {
                "id": "NatRole",
                "path": "tp-vpc-dev/tp-vpc-dev/NatRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-vpc-dev/tp-vpc-dev/NatRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "ec2.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-vpc-dev/tp-vpc-dev"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "tp-vpc-dev/Exports",
            "children": {
              "Output{\"Ref\":\"tpvpcdevPrivateSubnet1SubnetF419DD00\"}": {
                "id": "Output{\"Ref\":\"tpvpcdevPrivateSubnet1SubnetF419DD00\"}",
                "path": "tp-vpc-dev/Exports/Output{\"Ref\":\"tpvpcdevPrivateSubnet1SubnetF419DD00\"}"
              },
              "Output{\"Ref\":\"tpvpcdevPrivateSubnet2Subnet25578999\"}": {
                "id": "Output{\"Ref\":\"tpvpcdevPrivateSubnet2Subnet25578999\"}",
                "path": "tp-vpc-dev/Exports/Output{\"Ref\":\"tpvpcdevPrivateSubnet2Subnet25578999\"}"
              },
              "Output{\"Ref\":\"tpvpcdev26ADF65F\"}": {
                "id": "Output{\"Ref\":\"tpvpcdev26ADF65F\"}",
                "path": "tp-vpc-dev/Exports/Output{\"Ref\":\"tpvpcdev26ADF65F\"}"
              },
              "Output{\"Ref\":\"tpvpcdevPublicSubnet1Subnet68E7FBEC\"}": {
                "id": "Output{\"Ref\":\"tpvpcdevPublicSubnet1Subnet68E7FBEC\"}",
                "path": "tp-vpc-dev/Exports/Output{\"Ref\":\"tpvpcdevPublicSubnet1Subnet68E7FBEC\"}"
              },
              "Output{\"Ref\":\"tpvpcdevPublicSubnet2Subnet48B24DB2\"}": {
                "id": "Output{\"Ref\":\"tpvpcdevPublicSubnet2Subnet48B24DB2\"}",
                "path": "tp-vpc-dev/Exports/Output{\"Ref\":\"tpvpcdevPublicSubnet2Subnet48B24DB2\"}"
              }
            }
          }
        }
      },
      "TpCommon": {
        "id": "TpCommon",
        "path": "TpCommon",
        "children": {
          "masterKey": {
            "id": "masterKey",
            "path": "TpCommon/masterKey"
          },
          "SsmParameterValue:CertifcateArn-typeparty.com:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": {
            "id": "SsmParameterValue:CertifcateArn-typeparty.com:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "path": "TpCommon/SsmParameterValue:CertifcateArn-typeparty.com:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter"
          },
          "SsmParameterValue:CertifcateArn-typeparty.com:C96584B6-F00A-464E-AD19-53AFF4B05118": {
            "id": "SsmParameterValue:CertifcateArn-typeparty.com:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "path": "TpCommon/SsmParameterValue:CertifcateArn-typeparty.com:C96584B6-F00A-464E-AD19-53AFF4B05118"
          },
          "typeparty.comSSLCert": {
            "id": "typeparty.comSSLCert",
            "path": "TpCommon/typeparty.comSSLCert"
          },
          "tp-prod": {
            "id": "tp-prod",
            "path": "TpCommon/tp-prod",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "TpCommon/tp-prod/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::HostedZone",
                  "aws:cdk:cloudformation:props": {
                    "name": "type.party."
                  }
                }
              }
            }
          },
          "www-tp-prod": {
            "id": "www-tp-prod",
            "path": "TpCommon/www-tp-prod",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "TpCommon/www-tp-prod/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "www.type.party.",
                    "type": "CNAME",
                    "hostedZoneId": {
                      "Ref": "tpprod49D00DF1"
                    },
                    "resourceRecords": [
                      "type-party.superhi.com"
                    ],
                    "ttl": "1800"
                  }
                }
              }
            }
          },
          "at-tp-prod": {
            "id": "at-tp-prod",
            "path": "TpCommon/at-tp-prod",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "TpCommon/at-tp-prod/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "@.type.party.",
                    "type": "CNAME",
                    "hostedZoneId": {
                      "Ref": "tpprod49D00DF1"
                    },
                    "resourceRecords": [
                      "type-party.superhi.com"
                    ],
                    "ttl": "1800"
                  }
                }
              }
            }
          },
          "bucket": {
            "id": "bucket",
            "path": "TpCommon/bucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "TpCommon/bucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "bucketName": "type.party",
                    "websiteConfiguration": {
                      "redirectAllRequestsTo": {
                        "hostName": "www.type.party",
                        "protocol": "http"
                      }
                    }
                  }
                }
              },
              "Notifications": {
                "id": "Notifications",
                "path": "TpCommon/bucket/Notifications"
              }
            }
          },
          "s3-tp-prod": {
            "id": "s3-tp-prod",
            "path": "TpCommon/s3-tp-prod",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "TpCommon/s3-tp-prod/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "type.party.",
                    "type": "A",
                    "aliasTarget": {
                      "hostedZoneId": "Z3AQBSTGFYJSTF",
                      "dnsName": "s3-website-us-east-1.amazonaws.com"
                    },
                    "hostedZoneId": {
                      "Ref": "tpprod49D00DF1"
                    }
                  }
                }
              }
            }
          },
          "Zone": {
            "id": "Zone",
            "path": "TpCommon/Zone"
          },
          "Exports": {
            "id": "Exports",
            "path": "TpCommon/Exports",
            "children": {
              "Output{\"Ref\":\"SsmParameterValueCertifcateArntypepartycomC96584B6F00A464EAD1953AFF4B05118Parameter\"}": {
                "id": "Output{\"Ref\":\"SsmParameterValueCertifcateArntypepartycomC96584B6F00A464EAD1953AFF4B05118Parameter\"}",
                "path": "TpCommon/Exports/Output{\"Ref\":\"SsmParameterValueCertifcateArntypepartycomC96584B6F00A464EAD1953AFF4B05118Parameter\"}"
              }
            }
          }
        }
      },
      "tp-lb-dev": {
        "id": "tp-lb-dev",
        "path": "tp-lb-dev",
        "children": {
          "loadbalancer": {
            "id": "loadbalancer",
            "path": "tp-lb-dev/loadbalancer",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "tp-lb-dev/loadbalancer/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                  "aws:cdk:cloudformation:props": {
                    "scheme": "internet-facing",
                    "securityGroups": [
                      {
                        "Fn::GetAtt": [
                          "loadbalancerSecurityGroup3A6B02E1",
                          "GroupId"
                        ]
                      }
                    ],
                    "subnets": [
                      {
                        "Fn::ImportValue": "tp-vpc-dev:ExportsOutputReftpvpcdevPublicSubnet1Subnet68E7FBEC5D42E57E"
                      },
                      {
                        "Fn::ImportValue": "tp-vpc-dev:ExportsOutputReftpvpcdevPublicSubnet2Subnet48B24DB25C427FA1"
                      }
                    ],
                    "type": "application"
                  }
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "tp-lb-dev/loadbalancer/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-lb-dev/loadbalancer/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "Automatically created Security Group for ELB tplbdevloadbalancer0340D10A",
                        "securityGroupIngress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "ipProtocol": "tcp",
                            "fromPort": 443,
                            "toPort": 443,
                            "description": "Allow from anyone on port 443"
                          },
                          {
                            "cidrIp": "0.0.0.0/0",
                            "ipProtocol": "tcp",
                            "fromPort": 80,
                            "toPort": 80,
                            "description": "Allow from anyone on port 80"
                          }
                        ],
                        "vpcId": {
                          "Fn::ImportValue": "tp-vpc-dev:ExportsOutputReftpvpcdev26ADF65FC3D75A45"
                        }
                      }
                    }
                  }
                }
              },
              "https-listener": {
                "id": "https-listener",
                "path": "tp-lb-dev/loadbalancer/https-listener",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-lb-dev/loadbalancer/https-listener/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                      "aws:cdk:cloudformation:props": {
                        "defaultActions": [
                          {
                            "targetGroupArn": {
                              "Ref": "defaultTargetGroup184444EC"
                            },
                            "type": "forward"
                          }
                        ],
                        "loadBalancerArn": {
                          "Ref": "loadbalancerEE24515C"
                        },
                        "port": 443,
                        "protocol": "HTTPS",
                        "certificates": [
                          {
                            "certificateArn": {
                              "Fn::ImportValue": "TpCommon:ExportsOutputRefSsmParameterValueCertifcateArntypepartycomC96584B6F00A464EAD1953AFF4B05118Parameter4845F098"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "feTargetGroupGroup": {
                    "id": "feTargetGroupGroup",
                    "path": "tp-lb-dev/loadbalancer/https-listener/feTargetGroupGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-lb-dev/loadbalancer/https-listener/feTargetGroupGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                          "aws:cdk:cloudformation:props": {
                            "port": 80,
                            "protocol": "HTTP",
                            "targetType": "instance",
                            "vpcId": {
                              "Fn::ImportValue": "tp-vpc-dev:ExportsOutputReftpvpcdev26ADF65FC3D75A45"
                            }
                          }
                        }
                      }
                    }
                  },
                  "feTargetGroupRule": {
                    "id": "feTargetGroupRule",
                    "path": "tp-lb-dev/loadbalancer/https-listener/feTargetGroupRule",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-lb-dev/loadbalancer/https-listener/feTargetGroupRule/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::ListenerRule",
                          "aws:cdk:cloudformation:props": {
                            "actions": [
                              {
                                "targetGroupArn": {
                                  "Ref": "loadbalancerhttpslistenerfeTargetGroupGroupD9F377AE"
                                },
                                "type": "forward"
                              }
                            ],
                            "conditions": [
                              {
                                "field": "host-header",
                                "values": [
                                  "www.typeparty.com"
                                ]
                              }
                            ],
                            "listenerArn": {
                              "Ref": "loadbalancerhttpslistener74C2F896"
                            },
                            "priority": 2
                          }
                        }
                      }
                    }
                  },
                  "apiTargetGroupGroup": {
                    "id": "apiTargetGroupGroup",
                    "path": "tp-lb-dev/loadbalancer/https-listener/apiTargetGroupGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-lb-dev/loadbalancer/https-listener/apiTargetGroupGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                          "aws:cdk:cloudformation:props": {
                            "port": 80,
                            "protocol": "HTTP",
                            "targetType": "instance",
                            "vpcId": {
                              "Fn::ImportValue": "tp-vpc-dev:ExportsOutputReftpvpcdev26ADF65FC3D75A45"
                            }
                          }
                        }
                      }
                    }
                  },
                  "apiTargetGroupRule": {
                    "id": "apiTargetGroupRule",
                    "path": "tp-lb-dev/loadbalancer/https-listener/apiTargetGroupRule",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-lb-dev/loadbalancer/https-listener/apiTargetGroupRule/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::ListenerRule",
                          "aws:cdk:cloudformation:props": {
                            "actions": [
                              {
                                "targetGroupArn": {
                                  "Ref": "loadbalancerhttpslistenerapiTargetGroupGroupB49F251B"
                                },
                                "type": "forward"
                              }
                            ],
                            "conditions": [
                              {
                                "field": "host-header",
                                "values": [
                                  "api.typeparty.com"
                                ]
                              }
                            ],
                            "listenerArn": {
                              "Ref": "loadbalancerhttpslistener74C2F896"
                            },
                            "priority": 1
                          }
                        }
                      }
                    }
                  },
                  "prismaTargetGroupGroup": {
                    "id": "prismaTargetGroupGroup",
                    "path": "tp-lb-dev/loadbalancer/https-listener/prismaTargetGroupGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-lb-dev/loadbalancer/https-listener/prismaTargetGroupGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                          "aws:cdk:cloudformation:props": {
                            "port": 80,
                            "protocol": "HTTP",
                            "targetType": "instance",
                            "vpcId": {
                              "Fn::ImportValue": "tp-vpc-dev:ExportsOutputReftpvpcdev26ADF65FC3D75A45"
                            }
                          }
                        }
                      }
                    }
                  },
                  "prismaTargetGroupRule": {
                    "id": "prismaTargetGroupRule",
                    "path": "tp-lb-dev/loadbalancer/https-listener/prismaTargetGroupRule",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-lb-dev/loadbalancer/https-listener/prismaTargetGroupRule/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::ListenerRule",
                          "aws:cdk:cloudformation:props": {
                            "actions": [
                              {
                                "targetGroupArn": {
                                  "Ref": "loadbalancerhttpslistenerprismaTargetGroupGroup36B8199C"
                                },
                                "type": "forward"
                              }
                            ],
                            "conditions": [
                              {
                                "field": "host-header",
                                "values": [
                                  "prisma.typeparty.com"
                                ]
                              }
                            ],
                            "listenerArn": {
                              "Ref": "loadbalancerhttpslistener74C2F896"
                            },
                            "priority": 3
                          }
                        }
                      }
                    }
                  }
                }
              },
              "http-listener": {
                "id": "http-listener",
                "path": "tp-lb-dev/loadbalancer/http-listener",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-lb-dev/loadbalancer/http-listener/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                      "aws:cdk:cloudformation:props": {
                        "defaultActions": [
                          {
                            "redirectConfig": {
                              "port": "443",
                              "protocol": "HTTPS",
                              "statusCode": "HTTP_301"
                            },
                            "type": "redirect"
                          }
                        ],
                        "loadBalancerArn": {
                          "Ref": "loadbalancerEE24515C"
                        },
                        "port": 80,
                        "protocol": "HTTP"
                      }
                    }
                  }
                }
              }
            }
          },
          "defaultTargetGroup": {
            "id": "defaultTargetGroup",
            "path": "tp-lb-dev/defaultTargetGroup",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "tp-lb-dev/defaultTargetGroup/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                  "aws:cdk:cloudformation:props": {
                    "port": 80,
                    "protocol": "HTTP",
                    "targetType": "instance",
                    "vpcId": {
                      "Fn::ImportValue": "tp-vpc-dev:ExportsOutputReftpvpcdev26ADF65FC3D75A45"
                    }
                  }
                }
              }
            }
          },
          "albRecord": {
            "id": "albRecord",
            "path": "tp-lb-dev/albRecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "tp-lb-dev/albRecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "typeparty.com.",
                    "type": "A",
                    "aliasTarget": {
                      "hostedZoneId": {
                        "Fn::GetAtt": [
                          "loadbalancerEE24515C",
                          "CanonicalHostedZoneID"
                        ]
                      },
                      "dnsName": {
                        "Fn::GetAtt": [
                          "loadbalancerEE24515C",
                          "DNSName"
                        ]
                      }
                    },
                    "hostedZoneId": "Z1M48R5Z0AFHNH"
                  }
                }
              }
            }
          },
          "wwwRecord": {
            "id": "wwwRecord",
            "path": "tp-lb-dev/wwwRecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "tp-lb-dev/wwwRecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "www.typeparty.com.",
                    "type": "A",
                    "aliasTarget": {
                      "hostedZoneId": {
                        "Fn::GetAtt": [
                          "loadbalancerEE24515C",
                          "CanonicalHostedZoneID"
                        ]
                      },
                      "dnsName": {
                        "Fn::GetAtt": [
                          "loadbalancerEE24515C",
                          "DNSName"
                        ]
                      }
                    },
                    "hostedZoneId": "Z1M48R5Z0AFHNH"
                  }
                }
              }
            }
          },
          "apiRecord": {
            "id": "apiRecord",
            "path": "tp-lb-dev/apiRecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "tp-lb-dev/apiRecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "api.typeparty.com.",
                    "type": "A",
                    "aliasTarget": {
                      "hostedZoneId": {
                        "Fn::GetAtt": [
                          "loadbalancerEE24515C",
                          "CanonicalHostedZoneID"
                        ]
                      },
                      "dnsName": {
                        "Fn::GetAtt": [
                          "loadbalancerEE24515C",
                          "DNSName"
                        ]
                      }
                    },
                    "hostedZoneId": "Z1M48R5Z0AFHNH"
                  }
                }
              }
            }
          },
          "prismaRecord": {
            "id": "prismaRecord",
            "path": "tp-lb-dev/prismaRecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "tp-lb-dev/prismaRecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "prisma.typeparty.com.",
                    "type": "A",
                    "aliasTarget": {
                      "hostedZoneId": {
                        "Fn::GetAtt": [
                          "loadbalancerEE24515C",
                          "CanonicalHostedZoneID"
                        ]
                      },
                      "dnsName": {
                        "Fn::GetAtt": [
                          "loadbalancerEE24515C",
                          "DNSName"
                        ]
                      }
                    },
                    "hostedZoneId": "Z1M48R5Z0AFHNH"
                  }
                }
              }
            }
          },
          "cluster": {
            "id": "cluster",
            "path": "tp-lb-dev/cluster",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "tp-lb-dev/cluster/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                  "aws:cdk:cloudformation:props": {}
                }
              },
              "DefaultAutoScalingGroup": {
                "id": "DefaultAutoScalingGroup",
                "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup",
                "children": {
                  "InstanceSecurityGroup": {
                    "id": "InstanceSecurityGroup",
                    "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/InstanceSecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/InstanceSecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "tp-lb-dev/cluster/DefaultAutoScalingGroup/InstanceSecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "tags": [
                              {
                                "key": "Name",
                                "value": "tp-lb-dev/cluster/DefaultAutoScalingGroup"
                              }
                            ],
                            "vpcId": {
                              "Fn::ImportValue": "tp-vpc-dev:ExportsOutputReftpvpcdev26ADF65FC3D75A45"
                            }
                          }
                        }
                      }
                    }
                  },
                  "InstanceRole": {
                    "id": "InstanceRole",
                    "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/InstanceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/InstanceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ec2.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "tags": [
                              {
                                "key": "Name",
                                "value": "tp-lb-dev/cluster/DefaultAutoScalingGroup"
                              }
                            ]
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/InstanceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/InstanceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "ecs:CreateCluster",
                                        "ecs:DeregisterContainerInstance",
                                        "ecs:DiscoverPollEndpoint",
                                        "ecs:Poll",
                                        "ecs:RegisterContainerInstance",
                                        "ecs:StartTelemetrySession",
                                        "ecs:Submit*",
                                        "ecr:GetAuthorizationToken",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "clusterDefaultAutoScalingGroupInstanceRoleDefaultPolicyFBC91645",
                                "roles": [
                                  {
                                    "Ref": "clusterDefaultAutoScalingGroupInstanceRole98EFF504"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "InstanceProfile": {
                    "id": "InstanceProfile",
                    "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/InstanceProfile",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                      "aws:cdk:cloudformation:props": {
                        "roles": [
                          {
                            "Ref": "clusterDefaultAutoScalingGroupInstanceRole98EFF504"
                          }
                        ]
                      }
                    }
                  },
                  "LaunchConfig": {
                    "id": "LaunchConfig",
                    "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/LaunchConfig",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::AutoScaling::LaunchConfiguration",
                      "aws:cdk:cloudformation:props": {
                        "imageId": {
                          "Ref": "SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter"
                        },
                        "instanceType": "t2.small",
                        "iamInstanceProfile": {
                          "Ref": "clusterDefaultAutoScalingGroupInstanceProfileC240B524"
                        },
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "clusterDefaultAutoScalingGroupInstanceSecurityGroup02B5B205",
                              "GroupId"
                            ]
                          }
                        ],
                        "spotPrice": "0.023",
                        "userData": {
                          "Fn::Base64": {
                            "Fn::Join": [
                              "",
                              [
                                "#!/bin/bash\necho ECS_CLUSTER=",
                                {
                                  "Ref": "cluster611F8AFF"
                                },
                                " >> /etc/ecs/ecs.config\nsudo iptables --insert FORWARD 1 --in-interface docker+ --destination 169.254.169.254/32 --jump DROP\nsudo service iptables save\necho ECS_AWSVPC_BLOCK_IMDS=true >> /etc/ecs/ecs.config"
                              ]
                            ]
                          }
                        }
                      }
                    }
                  },
                  "ASG": {
                    "id": "ASG",
                    "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/ASG",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::AutoScaling::AutoScalingGroup",
                      "aws:cdk:cloudformation:props": {
                        "maxSize": "1",
                        "minSize": "1",
                        "launchConfigurationName": {
                          "Ref": "clusterDefaultAutoScalingGroupLaunchConfigEC006908"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-lb-dev/cluster/DefaultAutoScalingGroup",
                            "propagateAtLaunch": true
                          }
                        ],
                        "vpcZoneIdentifier": [
                          {
                            "Fn::ImportValue": "tp-vpc-dev:ExportsOutputReftpvpcdevPrivateSubnet1SubnetF419DD006B86DAD9"
                          },
                          {
                            "Fn::ImportValue": "tp-vpc-dev:ExportsOutputReftpvpcdevPrivateSubnet2Subnet255789998AA14C7B"
                          }
                        ]
                      }
                    }
                  },
                  "DrainECSHook": {
                    "id": "DrainECSHook",
                    "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/DrainECSHook",
                    "children": {
                      "Function": {
                        "id": "Function",
                        "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function",
                        "children": {
                          "ServiceRole": {
                            "id": "ServiceRole",
                            "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "lambda.amazonaws.com"
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "managedPolicyArns": [
                                      {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                          ]
                                        ]
                                      }
                                    ],
                                    "tags": [
                                      {
                                        "key": "Name",
                                        "value": "tp-lb-dev/cluster/DefaultAutoScalingGroup"
                                      }
                                    ]
                                  }
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "ec2:DescribeInstances",
                                                "ec2:DescribeInstanceAttribute",
                                                "ec2:DescribeInstanceStatus",
                                                "ec2:DescribeHosts"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            },
                                            {
                                              "Action": "autoscaling:CompleteLifecycleAction",
                                              "Effect": "Allow",
                                              "Resource": {
                                                "Fn::Join": [
                                                  "",
                                                  [
                                                    "arn:",
                                                    {
                                                      "Ref": "AWS::Partition"
                                                    },
                                                    ":autoscaling:us-east-1:561034361591:autoScalingGroup:*:autoScalingGroupName/",
                                                    {
                                                      "Ref": "clusterDefaultAutoScalingGroupASG03807708"
                                                    }
                                                  ]
                                                ]
                                              }
                                            },
                                            {
                                              "Action": [
                                                "ecs:DescribeContainerInstances",
                                                "ecs:DescribeTasks"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            },
                                            {
                                              "Action": [
                                                "ecs:ListContainerInstances",
                                                "ecs:SubmitContainerStateChange",
                                                "ecs:SubmitTaskStateChange"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": {
                                                "Fn::GetAtt": [
                                                  "cluster611F8AFF",
                                                  "Arn"
                                                ]
                                              }
                                            },
                                            {
                                              "Action": [
                                                "ecs:UpdateContainerInstancesState",
                                                "ecs:ListTasks"
                                              ],
                                              "Condition": {
                                                "ArnEquals": {
                                                  "ecs:cluster": {
                                                    "Fn::GetAtt": [
                                                      "cluster611F8AFF",
                                                      "Arn"
                                                    ]
                                                  }
                                                }
                                              },
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "clusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicyC2015014",
                                        "roles": [
                                          {
                                            "Ref": "clusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleC8398058"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                              "aws:cdk:cloudformation:props": {
                                "code": {
                                  "zipFile": "import boto3, json, os, time\n\necs = boto3.client('ecs')\nautoscaling = boto3.client('autoscaling')\n\n\ndef lambda_handler(event, context):\n  print(json.dumps(event))\n  cluster = os.environ['CLUSTER']\n  snsTopicArn = event['Records'][0]['Sns']['TopicArn']\n  lifecycle_event = json.loads(event['Records'][0]['Sns']['Message'])\n  instance_id = lifecycle_event.get('EC2InstanceId')\n  if not instance_id:\n    print('Got event without EC2InstanceId: %s', json.dumps(event))\n    return\n\n  instance_arn = container_instance_arn(cluster, instance_id)\n  print('Instance %s has container instance ARN %s' % (lifecycle_event['EC2InstanceId'], instance_arn))\n\n  if not instance_arn:\n    return\n\n  while has_tasks(cluster, instance_arn):\n    time.sleep(10)\n\n  try:\n    print('Terminating instance %s' % instance_id)\n    autoscaling.complete_lifecycle_action(\n        LifecycleActionResult='CONTINUE',\n        **pick(lifecycle_event, 'LifecycleHookName', 'LifecycleActionToken', 'AutoScalingGroupName'))\n  except Exception as e:\n    # Lifecycle action may have already completed.\n    print(str(e))\n\n\ndef container_instance_arn(cluster, instance_id):\n  \"\"\"Turn an instance ID into a container instance ARN.\"\"\"\n  arns = ecs.list_container_instances(cluster=cluster, filter='ec2InstanceId==' + instance_id)['containerInstanceArns']\n  if not arns:\n    return None\n  return arns[0]\n\n\ndef has_tasks(cluster, instance_arn):\n  \"\"\"Return True if the instance is running tasks for the given cluster.\"\"\"\n  instances = ecs.describe_container_instances(cluster=cluster, containerInstances=[instance_arn])['containerInstances']\n  if not instances:\n    return False\n  instance = instances[0]\n\n  if instance['status'] == 'ACTIVE':\n    # Start draining, then try again later\n    set_container_instance_to_draining(cluster, instance_arn)\n    return True\n\n  tasks = instance['runningTasksCount'] + instance['pendingTasksCount']\n  print('Instance %s has %s tasks' % (instance_arn, tasks))\n\n  return tasks > 0\n\n\ndef set_container_instance_to_draining(cluster, instance_arn):\n  ecs.update_container_instances_state(\n      cluster=cluster,\n      containerInstances=[instance_arn], status='DRAINING')\n\n\ndef pick(dct, *keys):\n  \"\"\"Pick a subset of a dict.\"\"\"\n  return {k: v for k, v in dct.items() if k in keys}\n"
                                },
                                "handler": "index.lambda_handler",
                                "role": {
                                  "Fn::GetAtt": [
                                    "clusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleC8398058",
                                    "Arn"
                                  ]
                                },
                                "runtime": "python3.6",
                                "environment": {
                                  "variables": {
                                    "CLUSTER": {
                                      "Ref": "cluster611F8AFF"
                                    }
                                  }
                                },
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "tp-lb-dev/cluster/DefaultAutoScalingGroup"
                                  }
                                ],
                                "timeout": 310
                              }
                            }
                          },
                          "AllowInvoke:tplbdevclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic4F330FF0": {
                            "id": "AllowInvoke:tplbdevclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic4F330FF0",
                            "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/AllowInvoke:tplbdevclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic4F330FF0",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "clusterDefaultAutoScalingGroupDrainECSHookFunctionB217787A",
                                    "Arn"
                                  ]
                                },
                                "principal": "sns.amazonaws.com",
                                "sourceArn": {
                                  "Ref": "clusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicC8A9EF85"
                                }
                              }
                            }
                          },
                          "Topic": {
                            "id": "Topic",
                            "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Topic",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Topic/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::SNS::Subscription",
                                  "aws:cdk:cloudformation:props": {
                                    "protocol": "lambda",
                                    "topicArn": {
                                      "Ref": "clusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicC8A9EF85"
                                    },
                                    "endpoint": {
                                      "Fn::GetAtt": [
                                        "clusterDefaultAutoScalingGroupDrainECSHookFunctionB217787A",
                                        "Arn"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "LifecycleHookDrainHook": {
                    "id": "LifecycleHookDrainHook",
                    "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook",
                    "children": {
                      "Role": {
                        "id": "Role",
                        "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "autoscaling.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "tp-lb-dev/cluster/DefaultAutoScalingGroup"
                                  }
                                ]
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sns:Publish",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Ref": "clusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicC8A9EF85"
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "clusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicyB8C7E1BD",
                                    "roles": [
                                      {
                                        "Ref": "clusterDefaultAutoScalingGroupLifecycleHookDrainHookRole3AE4A0D5"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Topic": {
                        "id": "Topic",
                        "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Topic",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Topic/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::SNS::Topic",
                              "aws:cdk:cloudformation:props": {
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "tp-lb-dev/cluster/DefaultAutoScalingGroup"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-lb-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::AutoScaling::LifecycleHook",
                          "aws:cdk:cloudformation:props": {
                            "autoScalingGroupName": {
                              "Ref": "clusterDefaultAutoScalingGroupASG03807708"
                            },
                            "lifecycleTransition": "autoscaling:EC2_INSTANCE_TERMINATING",
                            "defaultResult": "CONTINUE",
                            "heartbeatTimeout": 300,
                            "notificationTargetArn": {
                              "Ref": "clusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicC8A9EF85"
                            },
                            "roleArn": {
                              "Fn::GetAtt": [
                                "clusterDefaultAutoScalingGroupLifecycleHookDrainHookRole3AE4A0D5",
                                "Arn"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": {
            "id": "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "path": "tp-lb-dev/SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter"
          },
          "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118": {
            "id": "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "path": "tp-lb-dev/SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118"
          },
          "Exports": {
            "id": "Exports",
            "path": "tp-lb-dev/Exports",
            "children": {
              "Output{\"Ref\":\"cluster611F8AFF\"}": {
                "id": "Output{\"Ref\":\"cluster611F8AFF\"}",
                "path": "tp-lb-dev/Exports/Output{\"Ref\":\"cluster611F8AFF\"}"
              },
              "Output{\"Ref\":\"loadbalancerhttpslistenerprismaTargetGroupGroup36B8199C\"}": {
                "id": "Output{\"Ref\":\"loadbalancerhttpslistenerprismaTargetGroupGroup36B8199C\"}",
                "path": "tp-lb-dev/Exports/Output{\"Ref\":\"loadbalancerhttpslistenerprismaTargetGroupGroup36B8199C\"}"
              },
              "Output{\"Fn::GetAtt\":[\"clusterDefaultAutoScalingGroupInstanceSecurityGroup02B5B205\",\"GroupId\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"clusterDefaultAutoScalingGroupInstanceSecurityGroup02B5B205\",\"GroupId\"]}",
                "path": "tp-lb-dev/Exports/Output{\"Fn::GetAtt\":[\"clusterDefaultAutoScalingGroupInstanceSecurityGroup02B5B205\",\"GroupId\"]}"
              },
              "Output{\"Fn::GetAtt\":[\"loadbalancerSecurityGroup3A6B02E1\",\"GroupId\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"loadbalancerSecurityGroup3A6B02E1\",\"GroupId\"]}",
                "path": "tp-lb-dev/Exports/Output{\"Fn::GetAtt\":[\"loadbalancerSecurityGroup3A6B02E1\",\"GroupId\"]}"
              },
              "Output{\"Ref\":\"defaultTargetGroup184444EC\"}": {
                "id": "Output{\"Ref\":\"defaultTargetGroup184444EC\"}",
                "path": "tp-lb-dev/Exports/Output{\"Ref\":\"defaultTargetGroup184444EC\"}"
              },
              "Output{\"Ref\":\"loadbalancerhttpslistenerfeTargetGroupGroupD9F377AE\"}": {
                "id": "Output{\"Ref\":\"loadbalancerhttpslistenerfeTargetGroupGroupD9F377AE\"}",
                "path": "tp-lb-dev/Exports/Output{\"Ref\":\"loadbalancerhttpslistenerfeTargetGroupGroupD9F377AE\"}"
              },
              "Output{\"Ref\":\"loadbalancerhttpslistenerapiTargetGroupGroupB49F251B\"}": {
                "id": "Output{\"Ref\":\"loadbalancerhttpslistenerapiTargetGroupGroupB49F251B\"}",
                "path": "tp-lb-dev/Exports/Output{\"Ref\":\"loadbalancerhttpslistenerapiTargetGroupGroupB49F251B\"}"
              }
            }
          }
        }
      },
      "tp-images-dev": {
        "id": "tp-images-dev",
        "path": "tp-images-dev",
        "children": {
          "bucket": {
            "id": "bucket",
            "path": "tp-images-dev/bucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "tp-images-dev/bucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "bucketName": "tp-images-dev-bucket",
                    "publicAccessBlockConfiguration": {
                      "blockPublicAcls": true,
                      "blockPublicPolicy": true,
                      "ignorePublicAcls": true,
                      "restrictPublicBuckets": true
                    }
                  }
                }
              },
              "Notifications": {
                "id": "Notifications",
                "path": "tp-images-dev/bucket/Notifications"
              },
              "Policy": {
                "id": "Policy",
                "path": "tp-images-dev/bucket/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-images-dev/bucket/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                      "aws:cdk:cloudformation:props": {
                        "bucket": {
                          "Ref": "bucket43879C71"
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "s3:GetObject*",
                                "s3:GetBucket*",
                                "s3:List*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "CanonicalUser": {
                                  "Fn::GetAtt": [
                                    "oai7A77E975",
                                    "S3CanonicalUserId"
                                  ]
                                }
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "bucket43879C71",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "bucket43879C71",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "oai": {
            "id": "oai",
            "path": "tp-images-dev/oai",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "tp-images-dev/oai/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
                  "aws:cdk:cloudformation:props": {
                    "cloudFrontOriginAccessIdentityConfig": {
                      "comment": {
                        "Fn::Join": [
                          "",
                          [
                            "Origin access identity for ",
                            {
                              "Ref": "bucket43879C71"
                            }
                          ]
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "distro": {
            "id": "distro",
            "path": "tp-images-dev/distro",
            "children": {
              "AliasConfigurationCert": {
                "id": "AliasConfigurationCert",
                "path": "tp-images-dev/distro/AliasConfigurationCert"
              },
              "CFDistribution": {
                "id": "CFDistribution",
                "path": "tp-images-dev/distro/CFDistribution",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFront::Distribution",
                  "aws:cdk:cloudformation:props": {
                    "distributionConfig": {
                      "enabled": true,
                      "defaultRootObject": "index.html",
                      "httpVersion": "http2",
                      "priceClass": "PriceClass_100",
                      "ipv6Enabled": true,
                      "origins": [
                        {
                          "id": "origin1",
                          "domainName": {
                            "Fn::GetAtt": [
                              "bucket43879C71",
                              "RegionalDomainName"
                            ]
                          },
                          "s3OriginConfig": {
                            "originAccessIdentity": {
                              "Fn::Join": [
                                "",
                                [
                                  "origin-access-identity/cloudfront/",
                                  {
                                    "Ref": "oai7A77E975"
                                  }
                                ]
                              ]
                            }
                          }
                        }
                      ],
                      "defaultCacheBehavior": {
                        "allowedMethods": [
                          "GET",
                          "HEAD"
                        ],
                        "cachedMethods": [
                          "GET",
                          "HEAD"
                        ],
                        "compress": true,
                        "forwardedValues": {
                          "queryString": false,
                          "cookies": {
                            "forward": "none"
                          }
                        },
                        "targetOriginId": "origin1",
                        "viewerProtocolPolicy": "redirect-to-https"
                      },
                      "aliases": [
                        "images.typeparty.com"
                      ],
                      "viewerCertificate": {
                        "acmCertificateArn": {
                          "Fn::ImportValue": "TpCommon:ExportsOutputRefSsmParameterValueCertifcateArntypepartycomC96584B6F00A464EAD1953AFF4B05118Parameter4845F098"
                        },
                        "sslSupportMethod": "sni-only",
                        "minimumProtocolVersion": "TLSv1.1_2016"
                      }
                    }
                  }
                }
              }
            }
          },
          "ImagesARecord": {
            "id": "ImagesARecord",
            "path": "tp-images-dev/ImagesARecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "tp-images-dev/ImagesARecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "images.typeparty.com.",
                    "type": "A",
                    "aliasTarget": {
                      "hostedZoneId": "Z2FDTNDATAQYW2",
                      "dnsName": {
                        "Fn::GetAtt": [
                          "distroCFDistributionB272DD5C",
                          "DomainName"
                        ]
                      }
                    },
                    "hostedZoneId": "Z1M48R5Z0AFHNH"
                  }
                }
              }
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "tp-images-dev/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"bucket43879C71\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"bucket43879C71\",\"Arn\"]}",
                "path": "tp-images-dev/Exports/Output{\"Fn::GetAtt\":[\"bucket43879C71\",\"Arn\"]}"
              },
              "Output{\"Ref\":\"bucket43879C71\"}": {
                "id": "Output{\"Ref\":\"bucket43879C71\"}",
                "path": "tp-images-dev/Exports/Output{\"Ref\":\"bucket43879C71\"}"
              }
            }
          }
        }
      },
      "tp-db-dev": {
        "id": "tp-db-dev",
        "path": "tp-db-dev",
        "children": {
          "masterPass": {
            "id": "masterPass",
            "path": "tp-db-dev/masterPass",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "tp-db-dev/masterPass/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SecretsManager::Secret",
                  "aws:cdk:cloudformation:props": {
                    "generateSecretString": {
                      "excludePunctuation": true
                    },
                    "kmsKeyId": "arn:aws:kms:us-east-1:561034361591:key/1b511fa7-dcd4-4db9-aef9-c15b141b3b29"
                  }
                }
              }
            }
          },
          "postgres": {
            "id": "postgres",
            "path": "tp-db-dev/postgres",
            "children": {
              "SubnetGroup": {
                "id": "SubnetGroup",
                "path": "tp-db-dev/postgres/SubnetGroup",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::RDS::DBSubnetGroup",
                  "aws:cdk:cloudformation:props": {
                    "dbSubnetGroupDescription": "Subnet group for postgres database",
                    "subnetIds": [
                      {
                        "Fn::ImportValue": "tp-vpc-dev:ExportsOutputReftpvpcdevPrivateSubnet1SubnetF419DD006B86DAD9"
                      },
                      {
                        "Fn::ImportValue": "tp-vpc-dev:ExportsOutputReftpvpcdevPrivateSubnet2Subnet255789998AA14C7B"
                      }
                    ]
                  }
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "tp-db-dev/postgres/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-db-dev/postgres/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "Security group for postgres database",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "vpcId": {
                          "Fn::ImportValue": "tp-vpc-dev:ExportsOutputReftpvpcdev26ADF65FC3D75A45"
                        }
                      }
                    }
                  },
                  "from 0.0.0.0_0:{IndirectPort}": {
                    "id": "from 0.0.0.0_0:{IndirectPort}",
                    "path": "tp-db-dev/postgres/SecurityGroup/from 0.0.0.0_0:{IndirectPort}",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                      "aws:cdk:cloudformation:props": {
                        "ipProtocol": "tcp",
                        "cidrIp": "0.0.0.0/0",
                        "description": "from 0.0.0.0/0:{IndirectPort}",
                        "fromPort": {
                          "Fn::GetAtt": [
                            "postgres6BBC2FA4",
                            "Endpoint.Port"
                          ]
                        },
                        "groupId": {
                          "Fn::GetAtt": [
                            "postgresSecurityGroup1C7456F9",
                            "GroupId"
                          ]
                        },
                        "toPort": {
                          "Fn::GetAtt": [
                            "postgres6BBC2FA4",
                            "Endpoint.Port"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "tp-db-dev/postgres/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::RDS::DBInstance",
                  "aws:cdk:cloudformation:props": {
                    "dbInstanceClass": "db.t2.micro",
                    "allocatedStorage": "100",
                    "copyTagsToSnapshot": true,
                    "dbName": "postgres",
                    "dbSubnetGroupName": {
                      "Ref": "postgresSubnetGroup6B65B032"
                    },
                    "deletionProtection": true,
                    "engine": "postgres",
                    "masterUsername": "root",
                    "masterUserPassword": {
                      "Fn::Join": [
                        "",
                        [
                          "{{resolve:secretsmanager:",
                          {
                            "Ref": "masterPass79BF7903"
                          },
                          ":SecretString:::}}"
                        ]
                      ]
                    },
                    "storageType": "gp2",
                    "vpcSecurityGroups": [
                      {
                        "Fn::GetAtt": [
                          "postgresSecurityGroup1C7456F9",
                          "GroupId"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "tp-db-dev/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"postgres6BBC2FA4\",\"Endpoint.Address\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"postgres6BBC2FA4\",\"Endpoint.Address\"]}",
                "path": "tp-db-dev/Exports/Output{\"Fn::GetAtt\":[\"postgres6BBC2FA4\",\"Endpoint.Address\"]}"
              },
              "Output{\"Ref\":\"masterPass79BF7903\"}": {
                "id": "Output{\"Ref\":\"masterPass79BF7903\"}",
                "path": "tp-db-dev/Exports/Output{\"Ref\":\"masterPass79BF7903\"}"
              }
            }
          }
        }
      },
      "tp-api-dev": {
        "id": "tp-api-dev",
        "path": "tp-api-dev",
        "children": {
          "PRISMA_SECRET": {
            "id": "PRISMA_SECRET",
            "path": "tp-api-dev/PRISMA_SECRET"
          },
          "APP_SECRET": {
            "id": "APP_SECRET",
            "path": "tp-api-dev/APP_SECRET"
          },
          "PRISMA_MANAGEMENT_SECRET.Parameter": {
            "id": "PRISMA_MANAGEMENT_SECRET.Parameter",
            "path": "tp-api-dev/PRISMA_MANAGEMENT_SECRET.Parameter"
          },
          "PRISMA_MANAGEMENT_SECRET": {
            "id": "PRISMA_MANAGEMENT_SECRET",
            "path": "tp-api-dev/PRISMA_MANAGEMENT_SECRET"
          },
          "PRISMA_ENDPOINT.Parameter": {
            "id": "PRISMA_ENDPOINT.Parameter",
            "path": "tp-api-dev/PRISMA_ENDPOINT.Parameter"
          },
          "PRISMA_ENDPOINT": {
            "id": "PRISMA_ENDPOINT",
            "path": "tp-api-dev/PRISMA_ENDPOINT"
          },
          "taskdef": {
            "id": "taskdef",
            "path": "tp-api-dev/taskdef",
            "children": {
              "TaskRole": {
                "id": "TaskRole",
                "path": "tp-api-dev/taskdef/TaskRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-api-dev/taskdef/TaskRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "ecs-tasks.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "tp-api-dev/taskdef/TaskRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-api-dev/taskdef/TaskRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "s3:PutObject*",
                                    "s3:Abort*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        {
                                          "Fn::ImportValue": "tp-images-dev:ExportsOutputFnGetAttbucket43879C71Arn20063EB0"
                                        },
                                        "/*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:iam::561034361591:user/cdk-user"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "taskdefTaskRoleDefaultPolicyCAEEE31E",
                            "roles": [
                              {
                                "Ref": "taskdefTaskRole1E652319"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "tp-api-dev/taskdef/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Fn::Select": [
                                  4,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":ecr:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":repository/tp-api"
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              ".dkr.ecr.",
                              {
                                "Fn::Select": [
                                  3,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":ecr:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":repository/tp-api"
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              ".",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/tp-api:latest"
                            ]
                          ]
                        },
                        "memoryReservation": 256,
                        "name": "api",
                        "portMappings": [
                          {
                            "containerPort": 4000,
                            "hostPort": 0,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "taskdefapiLogGroupF097149F"
                            },
                            "awslogs-stream-prefix": "tp-api-dev2",
                            "awslogs-region": "us-east-1"
                          }
                        },
                        "environment": [
                          {
                            "name": "S3_ENDPOINT",
                            "value": "https://s3.us-east-1.amazonaws.com"
                          },
                          {
                            "name": "S3_BUCKET",
                            "value": {
                              "Fn::ImportValue": "tp-images-dev:ExportsOutputRefbucket43879C716CF1CFA3"
                            }
                          }
                        ],
                        "secrets": [
                          {
                            "name": "PRISMA_SECRET",
                            "valueFrom": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":ssm:us-east-1:561034361591:parameter/TpStaging/PRISMA_SECRET"
                                ]
                              ]
                            }
                          },
                          {
                            "name": "PRISMA_ENDPOINT",
                            "valueFrom": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":ssm:us-east-1:561034361591:parameter/TpStaging/PRISMA_ENDPOINT"
                                ]
                              ]
                            }
                          },
                          {
                            "name": "PRISMA_MANAGEMENT_API_SECRET",
                            "valueFrom": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":ssm:us-east-1:561034361591:parameter/TpStaging/PRISMA_MANAGEMENT_API_SECRET"
                                ]
                              ]
                            }
                          },
                          {
                            "name": "APP_SECRET",
                            "valueFrom": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":ssm:us-east-1:561034361591:parameter/TpStaging/APP_SECRET"
                                ]
                              ]
                            }
                          }
                        ]
                      }
                    ],
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "taskdefExecutionRoleC2924C0C",
                        "Arn"
                      ]
                    },
                    "family": "tpapidevtaskdefFCFF9D19",
                    "networkMode": "bridge",
                    "requiresCompatibilities": [
                      "EC2"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "taskdefTaskRole1E652319",
                        "Arn"
                      ]
                    }
                  }
                }
              },
              "api": {
                "id": "api",
                "path": "tp-api-dev/taskdef/api",
                "children": {
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "tp-api-dev/taskdef/api/LogGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-api-dev/taskdef/api/LogGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                          "aws:cdk:cloudformation:props": {}
                        }
                      }
                    }
                  }
                }
              },
              "ExecutionRole": {
                "id": "ExecutionRole",
                "path": "tp-api-dev/taskdef/ExecutionRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-api-dev/taskdef/ExecutionRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "ecs-tasks.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "tp-api-dev/taskdef/ExecutionRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-api-dev/taskdef/ExecutionRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "ecr:BatchCheckLayerAvailability",
                                    "ecr:GetDownloadUrlForLayer",
                                    "ecr:BatchGetImage"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":ecr:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":repository/tp-api"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "ecr:GetAuthorizationToken",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "taskdefapiLogGroupF097149F",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "kms:Decrypt",
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:kms:us-east-1:561034361591:key/1b511fa7-dcd4-4db9-aef9-c15b141b3b29"
                                },
                                {
                                  "Action": [
                                    "ssm:DescribeParameters",
                                    "ssm:GetParameters",
                                    "ssm:GetParameter",
                                    "ssm:GetParameterHistory"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":ssm:us-east-1:561034361591:parameter/TpStaging/PRISMA_SECRET"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "ssm:DescribeParameters",
                                    "ssm:GetParameters",
                                    "ssm:GetParameter",
                                    "ssm:GetParameterHistory"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":ssm:us-east-1:561034361591:parameter/TpStaging/PRISMA_ENDPOINT"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "ssm:DescribeParameters",
                                    "ssm:GetParameters",
                                    "ssm:GetParameter",
                                    "ssm:GetParameterHistory"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":ssm:us-east-1:561034361591:parameter/TpStaging/PRISMA_MANAGEMENT_API_SECRET"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "ssm:DescribeParameters",
                                    "ssm:GetParameters",
                                    "ssm:GetParameter",
                                    "ssm:GetParameterHistory"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":ssm:us-east-1:561034361591:parameter/TpStaging/APP_SECRET"
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "taskdefExecutionRoleDefaultPolicy2A521DEF",
                            "roles": [
                              {
                                "Ref": "taskdefExecutionRoleC2924C0C"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "ec2-service": {
            "id": "ec2-service",
            "path": "tp-api-dev/ec2-service",
            "children": {
              "Service": {
                "id": "Service",
                "path": "tp-api-dev/ec2-service/Service",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                  "aws:cdk:cloudformation:props": {
                    "cluster": {
                      "Fn::ImportValue": "tp-lb-dev:ExportsOutputRefcluster611F8AFFA07FC079"
                    },
                    "deploymentConfiguration": {
                      "maximumPercent": 200,
                      "minimumHealthyPercent": 50
                    },
                    "desiredCount": 1,
                    "enableEcsManagedTags": false,
                    "healthCheckGracePeriodSeconds": 60,
                    "launchType": "EC2",
                    "loadBalancers": [
                      {
                        "targetGroupArn": {
                          "Fn::ImportValue": "tp-lb-dev:ExportsOutputRefloadbalancerhttpslistenerapiTargetGroupGroupB49F251BD122BC79"
                        },
                        "containerName": "api",
                        "containerPort": 4000
                      }
                    ],
                    "schedulingStrategy": "REPLICA",
                    "taskDefinition": {
                      "Ref": "taskdef8C9C43DE"
                    }
                  }
                }
              },
              "SecurityGroup1": {
                "id": "SecurityGroup1",
                "path": "tp-api-dev/ec2-service/SecurityGroup1",
                "children": {
                  "from tplbdevloadbalancerSecurityGroup545133BC:32768-65535": {
                    "id": "from tplbdevloadbalancerSecurityGroup545133BC:32768-65535",
                    "path": "tp-api-dev/ec2-service/SecurityGroup1/from tplbdevloadbalancerSecurityGroup545133BC:32768-65535",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                      "aws:cdk:cloudformation:props": {
                        "ipProtocol": "tcp",
                        "description": "Load balancer to target",
                        "fromPort": 32768,
                        "groupId": {
                          "Fn::ImportValue": "tp-lb-dev:ExportsOutputFnGetAttclusterDefaultAutoScalingGroupInstanceSecurityGroup02B5B205GroupIdBAD7B510"
                        },
                        "sourceSecurityGroupId": {
                          "Fn::ImportValue": "tp-lb-dev:ExportsOutputFnGetAttloadbalancerSecurityGroup3A6B02E1GroupId12A98EFA"
                        },
                        "toPort": 65535
                      }
                    }
                  },
                  "tplbdevloadbalancerSecurityGroup545133BC:32768-65535 from": {
                    "id": "tplbdevloadbalancerSecurityGroup545133BC:32768-65535 from",
                    "path": "tp-api-dev/ec2-service/SecurityGroup1/tplbdevloadbalancerSecurityGroup545133BC:32768-65535 from",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupEgress",
                      "aws:cdk:cloudformation:props": {
                        "groupId": {
                          "Fn::ImportValue": "tp-lb-dev:ExportsOutputFnGetAttloadbalancerSecurityGroup3A6B02E1GroupId12A98EFA"
                        },
                        "ipProtocol": "tcp",
                        "description": "Load balancer to target",
                        "destinationSecurityGroupId": {
                          "Fn::ImportValue": "tp-lb-dev:ExportsOutputFnGetAttclusterDefaultAutoScalingGroupInstanceSecurityGroup02B5B205GroupIdBAD7B510"
                        },
                        "fromPort": 32768,
                        "toPort": 65535
                      }
                    }
                  }
                }
              }
            }
          },
          "Endpoint": {
            "id": "Endpoint",
            "path": "tp-api-dev/Endpoint"
          },
          "ServiceName": {
            "id": "ServiceName",
            "path": "tp-api-dev/ServiceName"
          },
          "ClusterName": {
            "id": "ClusterName",
            "path": "tp-api-dev/ClusterName"
          }
        }
      },
      "tp-frontend-dev": {
        "id": "tp-frontend-dev",
        "path": "tp-frontend-dev",
        "children": {
          "API_URL.Parameter": {
            "id": "API_URL.Parameter",
            "path": "tp-frontend-dev/API_URL.Parameter"
          },
          "API_URL": {
            "id": "API_URL",
            "path": "tp-frontend-dev/API_URL"
          },
          "taskdef": {
            "id": "taskdef",
            "path": "tp-frontend-dev/taskdef",
            "children": {
              "TaskRole": {
                "id": "TaskRole",
                "path": "tp-frontend-dev/taskdef/TaskRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-frontend-dev/taskdef/TaskRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "ecs-tasks.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "tp-frontend-dev/taskdef/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Fn::Select": [
                                  4,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":ecr:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":repository/tp-fe"
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              ".dkr.ecr.",
                              {
                                "Fn::Select": [
                                  3,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":ecr:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":repository/tp-fe"
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              ".",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/tp-fe:latest"
                            ]
                          ]
                        },
                        "memoryReservation": 256,
                        "name": "web",
                        "portMappings": [
                          {
                            "containerPort": 3000,
                            "hostPort": 0,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "taskdefwebLogGroupFBA19F38"
                            },
                            "awslogs-stream-prefix": "tp-frontend-dev",
                            "awslogs-region": "us-east-1"
                          }
                        },
                        "secrets": [
                          {
                            "name": "RAZZLE_API_URL",
                            "valueFrom": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":ssm:us-east-1:561034361591:parameter/TpStaging/API_URL"
                                ]
                              ]
                            }
                          }
                        ]
                      }
                    ],
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "taskdefExecutionRoleC2924C0C",
                        "Arn"
                      ]
                    },
                    "family": "tpfrontenddevtaskdef72D12B89",
                    "networkMode": "bridge",
                    "requiresCompatibilities": [
                      "EC2"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "taskdefTaskRole1E652319",
                        "Arn"
                      ]
                    }
                  }
                }
              },
              "web": {
                "id": "web",
                "path": "tp-frontend-dev/taskdef/web",
                "children": {
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "tp-frontend-dev/taskdef/web/LogGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-frontend-dev/taskdef/web/LogGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                          "aws:cdk:cloudformation:props": {}
                        }
                      }
                    }
                  }
                }
              },
              "ExecutionRole": {
                "id": "ExecutionRole",
                "path": "tp-frontend-dev/taskdef/ExecutionRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-frontend-dev/taskdef/ExecutionRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "ecs-tasks.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "tp-frontend-dev/taskdef/ExecutionRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-frontend-dev/taskdef/ExecutionRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "ecr:BatchCheckLayerAvailability",
                                    "ecr:GetDownloadUrlForLayer",
                                    "ecr:BatchGetImage"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":ecr:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":repository/tp-fe"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "ecr:GetAuthorizationToken",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "taskdefwebLogGroupFBA19F38",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "ssm:DescribeParameters",
                                    "ssm:GetParameters",
                                    "ssm:GetParameter",
                                    "ssm:GetParameterHistory"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":ssm:us-east-1:561034361591:parameter/TpStaging/API_URL"
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "taskdefExecutionRoleDefaultPolicy2A521DEF",
                            "roles": [
                              {
                                "Ref": "taskdefExecutionRoleC2924C0C"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "service": {
            "id": "service",
            "path": "tp-frontend-dev/service",
            "children": {
              "Service": {
                "id": "Service",
                "path": "tp-frontend-dev/service/Service",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                  "aws:cdk:cloudformation:props": {
                    "cluster": {
                      "Fn::ImportValue": "tp-lb-dev:ExportsOutputRefcluster611F8AFFA07FC079"
                    },
                    "deploymentConfiguration": {
                      "maximumPercent": 200,
                      "minimumHealthyPercent": 50
                    },
                    "desiredCount": 1,
                    "enableEcsManagedTags": false,
                    "healthCheckGracePeriodSeconds": 60,
                    "launchType": "EC2",
                    "loadBalancers": [
                      {
                        "targetGroupArn": {
                          "Fn::ImportValue": "tp-lb-dev:ExportsOutputRefdefaultTargetGroup184444EC37792C4A"
                        },
                        "containerName": "web",
                        "containerPort": 3000
                      },
                      {
                        "targetGroupArn": {
                          "Fn::ImportValue": "tp-lb-dev:ExportsOutputRefloadbalancerhttpslistenerfeTargetGroupGroupD9F377AE6602D934"
                        },
                        "containerName": "web",
                        "containerPort": 3000
                      }
                    ],
                    "schedulingStrategy": "REPLICA",
                    "taskDefinition": {
                      "Ref": "taskdef8C9C43DE"
                    }
                  }
                }
              },
              "SecurityGroup1": {
                "id": "SecurityGroup1",
                "path": "tp-frontend-dev/service/SecurityGroup1",
                "children": {
                  "from tplbdevloadbalancerSecurityGroup545133BC:32768-65535": {
                    "id": "from tplbdevloadbalancerSecurityGroup545133BC:32768-65535",
                    "path": "tp-frontend-dev/service/SecurityGroup1/from tplbdevloadbalancerSecurityGroup545133BC:32768-65535",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                      "aws:cdk:cloudformation:props": {
                        "ipProtocol": "tcp",
                        "description": "Load balancer to target",
                        "fromPort": 32768,
                        "groupId": {
                          "Fn::ImportValue": "tp-lb-dev:ExportsOutputFnGetAttclusterDefaultAutoScalingGroupInstanceSecurityGroup02B5B205GroupIdBAD7B510"
                        },
                        "sourceSecurityGroupId": {
                          "Fn::ImportValue": "tp-lb-dev:ExportsOutputFnGetAttloadbalancerSecurityGroup3A6B02E1GroupId12A98EFA"
                        },
                        "toPort": 65535
                      }
                    }
                  },
                  "tplbdevloadbalancerSecurityGroup545133BC:32768-65535 from": {
                    "id": "tplbdevloadbalancerSecurityGroup545133BC:32768-65535 from",
                    "path": "tp-frontend-dev/service/SecurityGroup1/tplbdevloadbalancerSecurityGroup545133BC:32768-65535 from",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupEgress",
                      "aws:cdk:cloudformation:props": {
                        "groupId": {
                          "Fn::ImportValue": "tp-lb-dev:ExportsOutputFnGetAttloadbalancerSecurityGroup3A6B02E1GroupId12A98EFA"
                        },
                        "ipProtocol": "tcp",
                        "description": "Load balancer to target",
                        "destinationSecurityGroupId": {
                          "Fn::ImportValue": "tp-lb-dev:ExportsOutputFnGetAttclusterDefaultAutoScalingGroupInstanceSecurityGroup02B5B205GroupIdBAD7B510"
                        },
                        "fromPort": 32768,
                        "toPort": 65535
                      }
                    }
                  }
                }
              }
            }
          },
          "TaskArn": {
            "id": "TaskArn",
            "path": "tp-frontend-dev/TaskArn"
          },
          "Endpoint": {
            "id": "Endpoint",
            "path": "tp-frontend-dev/Endpoint"
          },
          "ServiceName": {
            "id": "ServiceName",
            "path": "tp-frontend-dev/ServiceName"
          },
          "ClusterName": {
            "id": "ClusterName",
            "path": "tp-frontend-dev/ClusterName"
          }
        }
      },
      "tp-prisma-dev": {
        "id": "tp-prisma-dev",
        "path": "tp-prisma-dev",
        "children": {
          "SsmParameterValue:--TpStaging--PRISMA_MANAGEMENT_API_SECRET:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": {
            "id": "SsmParameterValue:--TpStaging--PRISMA_MANAGEMENT_API_SECRET:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "path": "tp-prisma-dev/SsmParameterValue:--TpStaging--PRISMA_MANAGEMENT_API_SECRET:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter"
          },
          "SsmParameterValue:--TpStaging--PRISMA_MANAGEMENT_API_SECRET:C96584B6-F00A-464E-AD19-53AFF4B05118": {
            "id": "SsmParameterValue:--TpStaging--PRISMA_MANAGEMENT_API_SECRET:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "path": "tp-prisma-dev/SsmParameterValue:--TpStaging--PRISMA_MANAGEMENT_API_SECRET:C96584B6-F00A-464E-AD19-53AFF4B05118"
          },
          "taskdef": {
            "id": "taskdef",
            "path": "tp-prisma-dev/taskdef",
            "children": {
              "TaskRole": {
                "id": "TaskRole",
                "path": "tp-prisma-dev/taskdef/TaskRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-prisma-dev/taskdef/TaskRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "ecs-tasks.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "tp-prisma-dev/taskdef/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": "prismagraphql/prisma:1.34",
                        "memoryReservation": 700,
                        "name": "prisma-container",
                        "portMappings": [
                          {
                            "containerPort": 4466,
                            "hostPort": 0,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "taskdefprismacontainerLogGroupB6F9BAA8"
                            },
                            "awslogs-stream-prefix": "undefined-logs",
                            "awslogs-region": "us-east-1"
                          }
                        },
                        "environment": [
                          {
                            "name": "PRISMA_CONFIG",
                            "value": {
                              "Fn::Join": [
                                "",
                                [
                                  "\n    managementApiSecret: ",
                                  {
                                    "Ref": "SsmParameterValueTpStagingPRISMAMANAGEMENTAPISECRETC96584B6F00A464EAD1953AFF4B05118Parameter"
                                  },
                                  "\n    port: 4466\n    databases:\n      default:\n        connector: postgres\n        active: true\n        host: ",
                                  {
                                    "Fn::ImportValue": "tp-db-dev:ExportsOutputFnGetAttpostgres6BBC2FA4EndpointAddress84834BDC"
                                  },
                                  "\n        port: 5432\n        user: root\n        password: {{resolve:secretsmanager:",
                                  {
                                    "Fn::ImportValue": "tp-db-dev:ExportsOutputRefmasterPass79BF7903470EFD9E"
                                  },
                                  ":SecretString:::}}\n        migrations: true\n        managementSchema: management\n    "
                                ]
                              ]
                            }
                          }
                        ]
                      }
                    ],
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "taskdefExecutionRoleC2924C0C",
                        "Arn"
                      ]
                    },
                    "family": "tpprismadevtaskdefB7EB04E7",
                    "networkMode": "bridge",
                    "requiresCompatibilities": [
                      "EC2"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "taskdefTaskRole1E652319",
                        "Arn"
                      ]
                    }
                  }
                }
              },
              "prisma-container": {
                "id": "prisma-container",
                "path": "tp-prisma-dev/taskdef/prisma-container",
                "children": {
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "tp-prisma-dev/taskdef/prisma-container/LogGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-prisma-dev/taskdef/prisma-container/LogGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                          "aws:cdk:cloudformation:props": {}
                        }
                      }
                    }
                  }
                }
              },
              "ExecutionRole": {
                "id": "ExecutionRole",
                "path": "tp-prisma-dev/taskdef/ExecutionRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-prisma-dev/taskdef/ExecutionRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "ecs-tasks.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "tp-prisma-dev/taskdef/ExecutionRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-prisma-dev/taskdef/ExecutionRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "taskdefprismacontainerLogGroupB6F9BAA8",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "taskdefExecutionRoleDefaultPolicy2A521DEF",
                            "roles": [
                              {
                                "Ref": "taskdefExecutionRoleC2924C0C"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "prisma": {
            "id": "prisma",
            "path": "tp-prisma-dev/prisma",
            "children": {
              "Service": {
                "id": "Service",
                "path": "tp-prisma-dev/prisma/Service",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                  "aws:cdk:cloudformation:props": {
                    "cluster": {
                      "Fn::ImportValue": "tp-lb-dev:ExportsOutputRefcluster611F8AFFA07FC079"
                    },
                    "deploymentConfiguration": {
                      "maximumPercent": 200,
                      "minimumHealthyPercent": 50
                    },
                    "desiredCount": 1,
                    "enableEcsManagedTags": false,
                    "healthCheckGracePeriodSeconds": 60,
                    "launchType": "EC2",
                    "loadBalancers": [
                      {
                        "targetGroupArn": {
                          "Fn::ImportValue": "tp-lb-dev:ExportsOutputRefloadbalancerhttpslistenerprismaTargetGroupGroup36B8199CCB2FD874"
                        },
                        "containerName": "prisma-container",
                        "containerPort": 4466
                      }
                    ],
                    "schedulingStrategy": "REPLICA",
                    "taskDefinition": {
                      "Ref": "taskdef8C9C43DE"
                    }
                  }
                }
              },
              "SecurityGroup1": {
                "id": "SecurityGroup1",
                "path": "tp-prisma-dev/prisma/SecurityGroup1",
                "children": {
                  "from tplbdevloadbalancerSecurityGroup545133BC:32768-65535": {
                    "id": "from tplbdevloadbalancerSecurityGroup545133BC:32768-65535",
                    "path": "tp-prisma-dev/prisma/SecurityGroup1/from tplbdevloadbalancerSecurityGroup545133BC:32768-65535",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                      "aws:cdk:cloudformation:props": {
                        "ipProtocol": "tcp",
                        "description": "Load balancer to target",
                        "fromPort": 32768,
                        "groupId": {
                          "Fn::ImportValue": "tp-lb-dev:ExportsOutputFnGetAttclusterDefaultAutoScalingGroupInstanceSecurityGroup02B5B205GroupIdBAD7B510"
                        },
                        "sourceSecurityGroupId": {
                          "Fn::ImportValue": "tp-lb-dev:ExportsOutputFnGetAttloadbalancerSecurityGroup3A6B02E1GroupId12A98EFA"
                        },
                        "toPort": 65535
                      }
                    }
                  },
                  "tplbdevloadbalancerSecurityGroup545133BC:32768-65535 from": {
                    "id": "tplbdevloadbalancerSecurityGroup545133BC:32768-65535 from",
                    "path": "tp-prisma-dev/prisma/SecurityGroup1/tplbdevloadbalancerSecurityGroup545133BC:32768-65535 from",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupEgress",
                      "aws:cdk:cloudformation:props": {
                        "groupId": {
                          "Fn::ImportValue": "tp-lb-dev:ExportsOutputFnGetAttloadbalancerSecurityGroup3A6B02E1GroupId12A98EFA"
                        },
                        "ipProtocol": "tcp",
                        "description": "Load balancer to target",
                        "destinationSecurityGroupId": {
                          "Fn::ImportValue": "tp-lb-dev:ExportsOutputFnGetAttclusterDefaultAutoScalingGroupInstanceSecurityGroup02B5B205GroupIdBAD7B510"
                        },
                        "fromPort": 32768,
                        "toPort": 65535
                      }
                    }
                  }
                }
              }
            }
          },
          "Endpoint": {
            "id": "Endpoint",
            "path": "tp-prisma-dev/Endpoint"
          },
          "ServiceName": {
            "id": "ServiceName",
            "path": "tp-prisma-dev/ServiceName"
          },
          "ClusterName": {
            "id": "ClusterName",
            "path": "tp-prisma-dev/ClusterName"
          }
        }
      }
    }
  }
}