{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "TpEcr": {
        "id": "TpEcr",
        "path": "TpEcr",
        "children": {
          "tp-gql": {
            "id": "tp-gql",
            "path": "TpEcr/tp-gql",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "TpEcr/tp-gql/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECR::Repository",
                  "aws:cdk:cloudformation:props": {
                    "lifecyclePolicy": "<unresolved-lazy>",
                    "repositoryName": "tp-gql",
                    "repositoryPolicyText": "<unresolved-lazy>"
                  }
                }
              }
            }
          },
          "tp-fe": {
            "id": "tp-fe",
            "path": "TpEcr/tp-fe",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "TpEcr/tp-fe/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECR::Repository",
                  "aws:cdk:cloudformation:props": {
                    "lifecyclePolicy": "<unresolved-lazy>",
                    "repositoryName": "tp-fe",
                    "repositoryPolicyText": "<unresolved-lazy>"
                  }
                }
              }
            }
          }
        }
      },
      "tp-vpc-dev": {
        "id": "tp-vpc-dev",
        "path": "tp-vpc-dev",
        "children": {
          "tp-vpc-dev": {
            "id": "tp-vpc-dev",
            "path": "tp-vpc-dev/tp-vpc-dev",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "tp-vpc-dev/tp-vpc-dev/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "tp-vpc-dev/tp-vpc-dev"
                      }
                    ]
                  }
                }
              },
              "PublicSubnet1": {
                "id": "PublicSubnet1",
                "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/18",
                        "vpcId": "${Token[TOKEN.28]}",
                        "availabilityZone": "us-east-1a",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": "${Token[TOKEN.28]}",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": "${Token[TOKEN.39]}",
                        "subnetId": "${Token[TOKEN.35]}"
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": "${Token[TOKEN.39]}",
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": "${Token[TOKEN.78]}"
                      }
                    }
                  },
                  "NatInstance": {
                    "id": "NatInstance",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1/NatInstance",
                    "children": {
                      "InstanceProfile": {
                        "id": "InstanceProfile",
                        "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1/NatInstance/InstanceProfile",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                          "aws:cdk:cloudformation:props": {
                            "roles": [
                              "${Token[TOKEN.95]}"
                            ]
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1/NatInstance/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Instance",
                          "aws:cdk:cloudformation:props": {
                            "availabilityZone": "us-east-1a",
                            "iamInstanceProfile": "${Token[TOKEN.101]}",
                            "imageId": "ami-02cb555e324696ced",
                            "instanceType": "t3a.nano",
                            "securityGroupIds": [
                              "#{Token[TOKEN.100]}"
                            ],
                            "sourceDestCheck": false,
                            "subnetId": "${Token[TOKEN.35]}",
                            "tags": [
                              {
                                "key": "Name",
                                "value": "tp-vpc-dev/tp-vpc-dev/PublicSubnet1/NatInstance"
                              }
                            ],
                            "userData": "${Token[TOKEN.99]}"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "PublicSubnet2": {
                "id": "PublicSubnet2",
                "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.64.0/18",
                        "vpcId": "${Token[TOKEN.28]}",
                        "availabilityZone": "us-east-1b",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": "${Token[TOKEN.28]}",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": "${Token[TOKEN.51]}",
                        "subnetId": "${Token[TOKEN.47]}"
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": "${Token[TOKEN.51]}",
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": "${Token[TOKEN.78]}"
                      }
                    }
                  },
                  "NatInstance": {
                    "id": "NatInstance",
                    "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2/NatInstance",
                    "children": {
                      "InstanceProfile": {
                        "id": "InstanceProfile",
                        "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2/NatInstance/InstanceProfile",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                          "aws:cdk:cloudformation:props": {
                            "roles": [
                              "${Token[TOKEN.95]}"
                            ]
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2/NatInstance/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Instance",
                          "aws:cdk:cloudformation:props": {
                            "availabilityZone": "us-east-1b",
                            "iamInstanceProfile": "${Token[TOKEN.114]}",
                            "imageId": "ami-02cb555e324696ced",
                            "instanceType": "t3a.nano",
                            "securityGroupIds": [
                              "#{Token[TOKEN.113]}"
                            ],
                            "sourceDestCheck": false,
                            "subnetId": "${Token[TOKEN.47]}",
                            "tags": [
                              {
                                "key": "Name",
                                "value": "tp-vpc-dev/tp-vpc-dev/PublicSubnet2/NatInstance"
                              }
                            ],
                            "userData": "${Token[TOKEN.112]}"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "PrivateSubnet1": {
                "id": "PrivateSubnet1",
                "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.128.0/18",
                        "vpcId": "${Token[TOKEN.28]}",
                        "availabilityZone": "us-east-1a",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet1"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": "${Token[TOKEN.28]}",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": "${Token[TOKEN.63]}",
                        "subnetId": "${Token[TOKEN.59]}"
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": "${Token[TOKEN.63]}",
                        "destinationCidrBlock": "0.0.0.0/0",
                        "instanceId": "${Token[TOKEN.108]}"
                      }
                    }
                  }
                }
              },
              "PrivateSubnet2": {
                "id": "PrivateSubnet2",
                "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.192.0/18",
                        "vpcId": "${Token[TOKEN.28]}",
                        "availabilityZone": "us-east-1b",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet2"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": "${Token[TOKEN.28]}",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": "${Token[TOKEN.75]}",
                        "subnetId": "${Token[TOKEN.71]}"
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "tp-vpc-dev/tp-vpc-dev/PrivateSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": "${Token[TOKEN.75]}",
                        "destinationCidrBlock": "0.0.0.0/0",
                        "instanceId": "${Token[TOKEN.121]}"
                      }
                    }
                  }
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "tp-vpc-dev/tp-vpc-dev/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "tp-vpc-dev/tp-vpc-dev"
                      }
                    ]
                  }
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "tp-vpc-dev/tp-vpc-dev/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": "${Token[TOKEN.28]}",
                    "internetGatewayId": "${Token[TOKEN.78]}"
                  }
                }
              },
              "NatSecurityGroup": {
                "id": "NatSecurityGroup",
                "path": "tp-vpc-dev/tp-vpc-dev/NatSecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-vpc-dev/tp-vpc-dev/NatSecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "Security Group for NAT instances",
                        "groupName": "${Token[TOKEN.82]}",
                        "securityGroupEgress": "<unresolved-lazy>",
                        "securityGroupIngress": "<unresolved-lazy>",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-vpc-dev/tp-vpc-dev"
                          }
                        ],
                        "vpcId": "${Token[TOKEN.28]}"
                      }
                    }
                  }
                }
              },
              "NatRole": {
                "id": "NatRole",
                "path": "tp-vpc-dev/tp-vpc-dev/NatRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-vpc-dev/tp-vpc-dev/NatRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "${Token[ec2.amazonaws.com.88]}"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          "#{Token[TOKEN.89]}"
                        ],
                        "roleName": "${Token[TOKEN.87]}",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-vpc-dev/tp-vpc-dev"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "tp-vpc-dev/Exports",
            "children": {
              "Output{\"Ref\":\"tpvpcdev26ADF65F\"}": {
                "id": "Output{\"Ref\":\"tpvpcdev26ADF65F\"}",
                "path": "tp-vpc-dev/Exports/Output{\"Ref\":\"tpvpcdev26ADF65F\"}"
              },
              "Output{\"Ref\":\"tpvpcdevPrivateSubnet1SubnetF419DD00\"}": {
                "id": "Output{\"Ref\":\"tpvpcdevPrivateSubnet1SubnetF419DD00\"}",
                "path": "tp-vpc-dev/Exports/Output{\"Ref\":\"tpvpcdevPrivateSubnet1SubnetF419DD00\"}"
              },
              "Output{\"Ref\":\"tpvpcdevPrivateSubnet2Subnet25578999\"}": {
                "id": "Output{\"Ref\":\"tpvpcdevPrivateSubnet2Subnet25578999\"}",
                "path": "tp-vpc-dev/Exports/Output{\"Ref\":\"tpvpcdevPrivateSubnet2Subnet25578999\"}"
              },
              "Output{\"Ref\":\"tpvpcdevPublicSubnet1Subnet68E7FBEC\"}": {
                "id": "Output{\"Ref\":\"tpvpcdevPublicSubnet1Subnet68E7FBEC\"}",
                "path": "tp-vpc-dev/Exports/Output{\"Ref\":\"tpvpcdevPublicSubnet1Subnet68E7FBEC\"}"
              },
              "Output{\"Ref\":\"tpvpcdevPublicSubnet2Subnet48B24DB2\"}": {
                "id": "Output{\"Ref\":\"tpvpcdevPublicSubnet2Subnet48B24DB2\"}",
                "path": "tp-vpc-dev/Exports/Output{\"Ref\":\"tpvpcdevPublicSubnet2Subnet48B24DB2\"}"
              }
            }
          }
        }
      },
      "TpCommon": {
        "id": "TpCommon",
        "path": "TpCommon",
        "children": {
          "masterKey": {
            "id": "masterKey",
            "path": "TpCommon/masterKey"
          },
          "SsmParameterValue:CertifcateArn-typeparty.com:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": {
            "id": "SsmParameterValue:CertifcateArn-typeparty.com:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "path": "TpCommon/SsmParameterValue:CertifcateArn-typeparty.com:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter"
          },
          "SsmParameterValue:CertifcateArn-typeparty.com:C96584B6-F00A-464E-AD19-53AFF4B05118": {
            "id": "SsmParameterValue:CertifcateArn-typeparty.com:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "path": "TpCommon/SsmParameterValue:CertifcateArn-typeparty.com:C96584B6-F00A-464E-AD19-53AFF4B05118"
          },
          "typeparty.comSSLCert": {
            "id": "typeparty.comSSLCert",
            "path": "TpCommon/typeparty.comSSLCert"
          },
          "tp-prod": {
            "id": "tp-prod",
            "path": "TpCommon/tp-prod",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "TpCommon/tp-prod/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::HostedZone",
                  "aws:cdk:cloudformation:props": {
                    "name": "type.party.",
                    "vpcs": "<unresolved-lazy>"
                  }
                }
              }
            }
          },
          "www-tp-prod": {
            "id": "www-tp-prod",
            "path": "TpCommon/www-tp-prod",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "TpCommon/www-tp-prod/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "www.type.party.",
                    "type": "CNAME",
                    "hostedZoneId": "${Token[TOKEN.133]}",
                    "resourceRecords": [
                      "type-party.superhi.com"
                    ],
                    "ttl": "1800"
                  }
                }
              }
            }
          },
          "at-tp-prod": {
            "id": "at-tp-prod",
            "path": "TpCommon/at-tp-prod",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "TpCommon/at-tp-prod/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "@.type.party.",
                    "type": "CNAME",
                    "hostedZoneId": "${Token[TOKEN.133]}",
                    "resourceRecords": [
                      "type-party.superhi.com"
                    ],
                    "ttl": "1800"
                  }
                }
              }
            }
          },
          "Zone": {
            "id": "Zone",
            "path": "TpCommon/Zone"
          },
          "Exports": {
            "id": "Exports",
            "path": "TpCommon/Exports",
            "children": {
              "Output{\"Ref\":\"SsmParameterValueCertifcateArntypepartycomC96584B6F00A464EAD1953AFF4B05118Parameter\"}": {
                "id": "Output{\"Ref\":\"SsmParameterValueCertifcateArntypepartycomC96584B6F00A464EAD1953AFF4B05118Parameter\"}",
                "path": "TpCommon/Exports/Output{\"Ref\":\"SsmParameterValueCertifcateArntypepartycomC96584B6F00A464EAD1953AFF4B05118Parameter\"}"
              }
            }
          }
        }
      },
      "tp-images-dev": {
        "id": "tp-images-dev",
        "path": "tp-images-dev",
        "children": {
          "bucket": {
            "id": "bucket",
            "path": "tp-images-dev/bucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "tp-images-dev/bucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "bucketName": "tp-images-dev-bucket",
                    "corsConfiguration": "<unresolved-lazy>",
                    "lifecycleConfiguration": "<unresolved-lazy>",
                    "metricsConfigurations": "<unresolved-lazy>",
                    "publicAccessBlockConfiguration": {
                      "blockPublicAcls": true,
                      "blockPublicPolicy": true,
                      "ignorePublicAcls": true,
                      "restrictPublicBuckets": true
                    }
                  }
                }
              },
              "Notifications": {
                "id": "Notifications",
                "path": "tp-images-dev/bucket/Notifications"
              },
              "Policy": {
                "id": "Policy",
                "path": "tp-images-dev/bucket/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-images-dev/bucket/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                      "aws:cdk:cloudformation:props": {
                        "bucket": "${Token[TOKEN.149]}",
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "s3:GetBucket*",
                                "s3:GetObject*",
                                "s3:List*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "CanonicalUser": "${Token[TOKEN.154]}"
                              },
                              "Resource": [
                                "${Token[TOKEN.150]}",
                                "${Token[TOKEN.150]}/*"
                              ]
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "oai": {
            "id": "oai",
            "path": "tp-images-dev/oai",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
              "aws:cdk:cloudformation:props": {
                "cloudFrontOriginAccessIdentityConfig": {
                  "comment": "Origin access identity for ${Token[TOKEN.149]}"
                }
              }
            }
          },
          "distro": {
            "id": "distro",
            "path": "tp-images-dev/distro",
            "children": {
              "AliasConfigurationCert": {
                "id": "AliasConfigurationCert",
                "path": "tp-images-dev/distro/AliasConfigurationCert"
              },
              "CFDistribution": {
                "id": "CFDistribution",
                "path": "tp-images-dev/distro/CFDistribution",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFront::Distribution",
                  "aws:cdk:cloudformation:props": {
                    "distributionConfig": {
                      "enabled": true,
                      "defaultRootObject": "index.html",
                      "httpVersion": "http2",
                      "priceClass": "PriceClass_100",
                      "ipv6Enabled": true,
                      "origins": [
                        {
                          "id": "origin1",
                          "domainName": "${Token[TOKEN.146]}",
                          "s3OriginConfig": {
                            "originAccessIdentity": "origin-access-identity/cloudfront/${Token[TOKEN.157]}"
                          }
                        }
                      ],
                      "defaultCacheBehavior": {
                        "allowedMethods": [
                          "GET",
                          "HEAD"
                        ],
                        "cachedMethods": [
                          "GET",
                          "HEAD"
                        ],
                        "compress": true,
                        "forwardedValues": {
                          "queryString": false,
                          "cookies": {
                            "forward": "none"
                          }
                        },
                        "targetOriginId": "origin1",
                        "viewerProtocolPolicy": "redirect-to-https"
                      },
                      "aliases": [
                        "images.typeparty.com"
                      ],
                      "viewerCertificate": {
                        "acmCertificateArn": "${Token[TOKEN.127]}",
                        "sslSupportMethod": "sni-only",
                        "minimumProtocolVersion": "TLSv1.1_2016"
                      }
                    }
                  }
                }
              }
            }
          },
          "ImagesARecord": {
            "id": "ImagesARecord",
            "path": "tp-images-dev/ImagesARecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "tp-images-dev/ImagesARecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "images.typeparty.com.",
                    "type": "A",
                    "aliasTarget": {
                      "hostedZoneId": "Z2FDTNDATAQYW2",
                      "dnsName": "${Token[TOKEN.160]}"
                    },
                    "hostedZoneId": "/hostedzone/Z1M48R5Z0AFHNH"
                  }
                }
              }
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "tp-images-dev/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"bucket43879C71\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"bucket43879C71\",\"Arn\"]}",
                "path": "tp-images-dev/Exports/Output{\"Fn::GetAtt\":[\"bucket43879C71\",\"Arn\"]}"
              },
              "Output{\"Ref\":\"bucket43879C71\"}": {
                "id": "Output{\"Ref\":\"bucket43879C71\"}",
                "path": "tp-images-dev/Exports/Output{\"Ref\":\"bucket43879C71\"}"
              }
            }
          }
        }
      },
      "tp-db-dev": {
        "id": "tp-db-dev",
        "path": "tp-db-dev",
        "children": {
          "masterPass": {
            "id": "masterPass",
            "path": "tp-db-dev/masterPass",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "tp-db-dev/masterPass/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SecretsManager::Secret",
                  "aws:cdk:cloudformation:props": {
                    "generateSecretString": {
                      "excludePunctuation": true
                    },
                    "kmsKeyId": "arn:aws:kms:us-east-1:561034361591:key/1b511fa7-dcd4-4db9-aef9-c15b141b3b29",
                    "name": "${Token[TOKEN.166]}"
                  }
                }
              }
            }
          },
          "postgres": {
            "id": "postgres",
            "path": "tp-db-dev/postgres",
            "children": {
              "SubnetGroup": {
                "id": "SubnetGroup",
                "path": "tp-db-dev/postgres/SubnetGroup",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::RDS::DBSubnetGroup",
                  "aws:cdk:cloudformation:props": {
                    "dbSubnetGroupDescription": "Subnet group for postgres database",
                    "subnetIds": [
                      "${Token[TOKEN.59]}",
                      "${Token[TOKEN.71]}"
                    ]
                  }
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "tp-db-dev/postgres/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-db-dev/postgres/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "Security group for postgres database",
                        "groupName": "${Token[TOKEN.172]}",
                        "securityGroupEgress": "<unresolved-lazy>",
                        "securityGroupIngress": "<unresolved-lazy>",
                        "vpcId": "${Token[TOKEN.28]}"
                      }
                    }
                  },
                  "from 0.0.0.0_0:{IndirectPort}": {
                    "id": "from 0.0.0.0_0:{IndirectPort}",
                    "path": "tp-db-dev/postgres/SecurityGroup/from 0.0.0.0_0:{IndirectPort}",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                      "aws:cdk:cloudformation:props": {
                        "ipProtocol": "tcp",
                        "cidrIp": "0.0.0.0/0",
                        "description": "from 0.0.0.0/0:{IndirectPort}",
                        "fromPort": -1.8881545897087881e+289,
                        "groupId": "${Token[TOKEN.174]}",
                        "toPort": -1.8881545897087881e+289
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "tp-db-dev/postgres/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::RDS::DBInstance",
                  "aws:cdk:cloudformation:props": {
                    "dbInstanceClass": "db.t2.micro",
                    "allocatedStorage": "100",
                    "copyTagsToSnapshot": true,
                    "dbName": "postgres",
                    "dbSubnetGroupName": "${Token[TOKEN.178]}",
                    "deletionProtection": true,
                    "engine": "postgres",
                    "masterUsername": "root",
                    "masterUserPassword": "${Token[TOKEN.179]}",
                    "storageType": "gp2",
                    "vpcSecurityGroups": [
                      "${Token[TOKEN.174]}"
                    ]
                  }
                }
              }
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "tp-db-dev/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"postgres6BBC2FA4\",\"Endpoint.Port\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"postgres6BBC2FA4\",\"Endpoint.Port\"]}",
                "path": "tp-db-dev/Exports/Output{\"Fn::GetAtt\":[\"postgres6BBC2FA4\",\"Endpoint.Port\"]}"
              },
              "Output{\"Fn::GetAtt\":[\"postgres6BBC2FA4\",\"Endpoint.Address\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"postgres6BBC2FA4\",\"Endpoint.Address\"]}",
                "path": "tp-db-dev/Exports/Output{\"Fn::GetAtt\":[\"postgres6BBC2FA4\",\"Endpoint.Address\"]}"
              },
              "Output{\"Ref\":\"masterPass79BF7903\"}": {
                "id": "Output{\"Ref\":\"masterPass79BF7903\"}",
                "path": "tp-db-dev/Exports/Output{\"Ref\":\"masterPass79BF7903\"}"
              }
            }
          }
        }
      },
      "tp-api-dev": {
        "id": "tp-api-dev",
        "path": "tp-api-dev",
        "children": {
          "cluster": {
            "id": "cluster",
            "path": "tp-api-dev/cluster",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "tp-api-dev/cluster/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                  "aws:cdk:cloudformation:props": {
                    "clusterName": "${Token[TOKEN.188]}"
                  }
                }
              },
              "DefaultAutoScalingGroup": {
                "id": "DefaultAutoScalingGroup",
                "path": "tp-api-dev/cluster/DefaultAutoScalingGroup",
                "children": {
                  "InstanceSecurityGroup": {
                    "id": "InstanceSecurityGroup",
                    "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/InstanceSecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/InstanceSecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "tp-api-dev/cluster/DefaultAutoScalingGroup/InstanceSecurityGroup",
                            "groupName": "${Token[TOKEN.195]}",
                            "securityGroupEgress": "<unresolved-lazy>",
                            "securityGroupIngress": "<unresolved-lazy>",
                            "tags": [
                              {
                                "key": "Name",
                                "value": "tp-api-dev/cluster/DefaultAutoScalingGroup"
                              }
                            ],
                            "vpcId": "${Token[TOKEN.28]}"
                          }
                        }
                      },
                      "from tpapidevserviceLBSecurityGroupF33F7954:32768-65535": {
                        "id": "from tpapidevserviceLBSecurityGroupF33F7954:32768-65535",
                        "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/InstanceSecurityGroup/from tpapidevserviceLBSecurityGroupF33F7954:32768-65535",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                          "aws:cdk:cloudformation:props": {
                            "ipProtocol": "tcp",
                            "description": "Load balancer to target",
                            "fromPort": 32768,
                            "groupId": "${Token[TOKEN.197]}",
                            "sourceSecurityGroupId": "${Token[TOKEN.308]}",
                            "toPort": 65535
                          }
                        }
                      }
                    }
                  },
                  "InstanceRole": {
                    "id": "InstanceRole",
                    "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/InstanceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/InstanceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "${Token[ec2.amazonaws.com.201]}"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              "#{Token[TOKEN.202]}"
                            ],
                            "roleName": "${Token[TOKEN.200]}",
                            "tags": [
                              {
                                "key": "Name",
                                "value": "tp-api-dev/cluster/DefaultAutoScalingGroup"
                              }
                            ]
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/InstanceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/InstanceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "ecs:CreateCluster",
                                        "ecs:DeregisterContainerInstance",
                                        "ecs:DiscoverPollEndpoint",
                                        "ecs:Poll",
                                        "ecs:RegisterContainerInstance",
                                        "ecs:StartTelemetrySession",
                                        "ecs:Submit*",
                                        "ecr:GetAuthorizationToken",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "${Token[TOKEN.223]}",
                                "groups": [
                                  "#{Token[TOKEN.226]}"
                                ],
                                "roles": [
                                  "#{Token[TOKEN.224]}"
                                ],
                                "users": [
                                  "#{Token[TOKEN.225]}"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "InstanceProfile": {
                    "id": "InstanceProfile",
                    "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/InstanceProfile",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                      "aws:cdk:cloudformation:props": {
                        "roles": [
                          "${Token[TOKEN.208]}"
                        ]
                      }
                    }
                  },
                  "LaunchConfig": {
                    "id": "LaunchConfig",
                    "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/LaunchConfig",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::AutoScaling::LaunchConfiguration",
                      "aws:cdk:cloudformation:props": {
                        "imageId": "${Token[TOKEN.212]}",
                        "instanceType": "t2.small",
                        "iamInstanceProfile": "${Token[TOKEN.216]}",
                        "securityGroups": [
                          "#{Token[TOKEN.215]}"
                        ],
                        "spotPrice": "0.023",
                        "userData": "${Token[TOKEN.214]}"
                      }
                    }
                  },
                  "ASG": {
                    "id": "ASG",
                    "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/ASG",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::AutoScaling::AutoScalingGroup",
                      "aws:cdk:cloudformation:props": {
                        "maxSize": "1",
                        "minSize": "1",
                        "desiredCapacity": "1",
                        "launchConfigurationName": "${Token[TOKEN.218]}",
                        "loadBalancerNames": [
                          "#{Token[TOKEN.219]}"
                        ],
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-api-dev/cluster/DefaultAutoScalingGroup",
                            "propagateAtLaunch": true
                          }
                        ],
                        "targetGroupArns": [
                          "#{Token[TOKEN.220]}"
                        ],
                        "vpcZoneIdentifier": [
                          "${Token[TOKEN.59]}",
                          "${Token[TOKEN.71]}"
                        ]
                      }
                    }
                  },
                  "DrainECSHook": {
                    "id": "DrainECSHook",
                    "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/DrainECSHook",
                    "children": {
                      "Function": {
                        "id": "Function",
                        "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function",
                        "children": {
                          "ServiceRole": {
                            "id": "ServiceRole",
                            "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "${Token[lambda.amazonaws.com.231]}"
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "managedPolicyArns": [
                                      "#{Token[TOKEN.232]}"
                                    ],
                                    "roleName": "${Token[TOKEN.230]}",
                                    "tags": [
                                      {
                                        "key": "Name",
                                        "value": "tp-api-dev/cluster/DefaultAutoScalingGroup"
                                      }
                                    ]
                                  }
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "ec2:DescribeInstances",
                                                "ec2:DescribeInstanceAttribute",
                                                "ec2:DescribeInstanceStatus",
                                                "ec2:DescribeHosts"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            },
                                            {
                                              "Action": "autoscaling:CompleteLifecycleAction",
                                              "Effect": "Allow",
                                              "Resource": "arn:${Token[AWS::Partition.3]}:autoscaling:us-east-1:561034361591:autoScalingGroup:*:autoScalingGroupName/${Token[TOKEN.222]}"
                                            },
                                            {
                                              "Action": [
                                                "ecs:DescribeContainerInstances",
                                                "ecs:DescribeTasks"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            },
                                            {
                                              "Action": [
                                                "ecs:ListContainerInstances",
                                                "ecs:SubmitContainerStateChange",
                                                "ecs:SubmitTaskStateChange"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "${Token[TOKEN.191]}"
                                            },
                                            {
                                              "Action": [
                                                "ecs:UpdateContainerInstancesState",
                                                "ecs:ListTasks"
                                              ],
                                              "Condition": {
                                                "ArnEquals": {
                                                  "ecs:cluster": "${Token[TOKEN.191]}"
                                                }
                                              },
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "${Token[TOKEN.271]}",
                                        "groups": [
                                          "#{Token[TOKEN.274]}"
                                        ],
                                        "roles": [
                                          "#{Token[TOKEN.272]}"
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.273]}"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                              "aws:cdk:cloudformation:props": {
                                "code": {
                                  "zipFile": "import boto3, json, os, time\n\necs = boto3.client('ecs')\nautoscaling = boto3.client('autoscaling')\n\n\ndef lambda_handler(event, context):\n  print(json.dumps(event))\n  cluster = os.environ['CLUSTER']\n  snsTopicArn = event['Records'][0]['Sns']['TopicArn']\n  lifecycle_event = json.loads(event['Records'][0]['Sns']['Message'])\n  instance_id = lifecycle_event.get('EC2InstanceId')\n  if not instance_id:\n    print('Got event without EC2InstanceId: %s', json.dumps(event))\n    return\n\n  instance_arn = container_instance_arn(cluster, instance_id)\n  print('Instance %s has container instance ARN %s' % (lifecycle_event['EC2InstanceId'], instance_arn))\n\n  if not instance_arn:\n    return\n\n  while has_tasks(cluster, instance_arn):\n    time.sleep(10)\n\n  try:\n    print('Terminating instance %s' % instance_id)\n    autoscaling.complete_lifecycle_action(\n        LifecycleActionResult='CONTINUE',\n        **pick(lifecycle_event, 'LifecycleHookName', 'LifecycleActionToken', 'AutoScalingGroupName'))\n  except Exception as e:\n    # Lifecycle action may have already completed.\n    print(str(e))\n\n\ndef container_instance_arn(cluster, instance_id):\n  \"\"\"Turn an instance ID into a container instance ARN.\"\"\"\n  arns = ecs.list_container_instances(cluster=cluster, filter='ec2InstanceId==' + instance_id)['containerInstanceArns']\n  if not arns:\n    return None\n  return arns[0]\n\n\ndef has_tasks(cluster, instance_arn):\n  \"\"\"Return True if the instance is running tasks for the given cluster.\"\"\"\n  instances = ecs.describe_container_instances(cluster=cluster, containerInstances=[instance_arn])['containerInstances']\n  if not instances:\n    return False\n  instance = instances[0]\n\n  if instance['status'] == 'ACTIVE':\n    # Start draining, then try again later\n    set_container_instance_to_draining(cluster, instance_arn)\n    return True\n\n  tasks = instance['runningTasksCount'] + instance['pendingTasksCount']\n  print('Instance %s has %s tasks' % (instance_arn, tasks))\n\n  return tasks > 0\n\n\ndef set_container_instance_to_draining(cluster, instance_arn):\n  ecs.update_container_instances_state(\n      cluster=cluster,\n      containerInstances=[instance_arn], status='DRAINING')\n\n\ndef pick(dct, *keys):\n  \"\"\"Pick a subset of a dict.\"\"\"\n  return {k: v for k, v in dct.items() if k in keys}\n"
                                },
                                "handler": "index.lambda_handler",
                                "role": "${Token[TOKEN.236]}",
                                "runtime": "python3.6",
                                "environment": "<unresolved-lazy>",
                                "functionName": "${Token[TOKEN.228]}",
                                "layers": [
                                  "#{Token[TOKEN.239]}"
                                ],
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "tp-api-dev/cluster/DefaultAutoScalingGroup"
                                  }
                                ],
                                "timeout": 310
                              }
                            }
                          },
                          "AllowInvoke:tpapidevclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic2BBA7999": {
                            "id": "AllowInvoke:tpapidevclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic2BBA7999",
                            "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/AllowInvoke:tpapidevclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic2BBA7999",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": "${Token[TOKEN.244]}",
                                "principal": "sns.amazonaws.com",
                                "sourceArn": "${Token[TOKEN.259]}"
                              }
                            }
                          },
                          "Topic": {
                            "id": "Topic",
                            "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Topic",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Topic/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::SNS::Subscription",
                                  "aws:cdk:cloudformation:props": {
                                    "protocol": "lambda",
                                    "topicArn": "${Token[TOKEN.259]}",
                                    "endpoint": "${Token[TOKEN.244]}"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "LifecycleHookDrainHook": {
                    "id": "LifecycleHookDrainHook",
                    "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook",
                    "children": {
                      "Role": {
                        "id": "Role",
                        "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "${Token[autoscaling.amazonaws.com.247]}"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "managedPolicyArns": [
                                  "#{Token[TOKEN.248]}"
                                ],
                                "roleName": "${Token[TOKEN.246]}",
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "tp-api-dev/cluster/DefaultAutoScalingGroup"
                                  }
                                ]
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sns:Publish",
                                          "Effect": "Allow",
                                          "Resource": "${Token[TOKEN.259]}"
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "${Token[TOKEN.264]}",
                                    "groups": [
                                      "#{Token[TOKEN.267]}"
                                    ],
                                    "roles": [
                                      "#{Token[TOKEN.265]}"
                                    ],
                                    "users": [
                                      "#{Token[TOKEN.266]}"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Topic": {
                        "id": "Topic",
                        "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Topic",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Topic/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::SNS::Topic",
                              "aws:cdk:cloudformation:props": {
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "tp-api-dev/cluster/DefaultAutoScalingGroup"
                                  }
                                ],
                                "topicName": "${Token[TOKEN.255]}"
                              }
                            }
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-api-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::AutoScaling::LifecycleHook",
                          "aws:cdk:cloudformation:props": {
                            "autoScalingGroupName": "${Token[TOKEN.222]}",
                            "lifecycleTransition": "autoscaling:EC2_INSTANCE_TERMINATING",
                            "defaultResult": "CONTINUE",
                            "heartbeatTimeout": 300,
                            "lifecycleHookName": "${Token[TOKEN.245]}",
                            "notificationTargetArn": "${Token[TOKEN.259]}",
                            "roleArn": "${Token[TOKEN.252]}"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": {
            "id": "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "path": "tp-api-dev/SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter"
          },
          "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118": {
            "id": "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "path": "tp-api-dev/SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118"
          },
          "PRISMA_SECRET.Parameter": {
            "id": "PRISMA_SECRET.Parameter",
            "path": "tp-api-dev/PRISMA_SECRET.Parameter"
          },
          "PRISMA_SECRET": {
            "id": "PRISMA_SECRET",
            "path": "tp-api-dev/PRISMA_SECRET"
          },
          "APP_SECRET.Parameter": {
            "id": "APP_SECRET.Parameter",
            "path": "tp-api-dev/APP_SECRET.Parameter"
          },
          "APP_SECRET": {
            "id": "APP_SECRET",
            "path": "tp-api-dev/APP_SECRET"
          },
          "PRISMA_MANAGEMENT_API_SECRET.Parameter": {
            "id": "PRISMA_MANAGEMENT_API_SECRET.Parameter",
            "path": "tp-api-dev/PRISMA_MANAGEMENT_API_SECRET.Parameter"
          },
          "PRISMA_MANAGEMENT_API_SECRET": {
            "id": "PRISMA_MANAGEMENT_API_SECRET",
            "path": "tp-api-dev/PRISMA_MANAGEMENT_API_SECRET"
          },
          "PRISMA_ENDPOINT.Parameter": {
            "id": "PRISMA_ENDPOINT.Parameter",
            "path": "tp-api-dev/PRISMA_ENDPOINT.Parameter"
          },
          "PRISMA_ENDPOINT": {
            "id": "PRISMA_ENDPOINT",
            "path": "tp-api-dev/PRISMA_ENDPOINT"
          },
          "service": {
            "id": "service",
            "path": "tp-api-dev/service",
            "children": {
              "LB": {
                "id": "LB",
                "path": "tp-api-dev/service/LB",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-api-dev/service/LB/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                      "aws:cdk:cloudformation:props": {
                        "loadBalancerAttributes": "<unresolved-lazy>",
                        "name": "${Token[TOKEN.298]}",
                        "scheme": "internet-facing",
                        "securityGroups": [
                          "#{Token[TOKEN.297]}"
                        ],
                        "subnets": [
                          "${Token[TOKEN.35]}",
                          "${Token[TOKEN.47]}"
                        ],
                        "type": "application"
                      }
                    }
                  },
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "tp-api-dev/service/LB/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-api-dev/service/LB/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "Automatically created Security Group for ELB tpapidevserviceLB414EE1FD",
                            "groupName": "${Token[TOKEN.306]}",
                            "securityGroupEgress": "<unresolved-lazy>",
                            "securityGroupIngress": "<unresolved-lazy>",
                            "vpcId": "${Token[TOKEN.28]}"
                          }
                        }
                      },
                      "to tpapidevclusterDefaultAutoScalingGroupInstanceSecurityGroupD933532C:32768-65535": {
                        "id": "to tpapidevclusterDefaultAutoScalingGroupInstanceSecurityGroupD933532C:32768-65535",
                        "path": "tp-api-dev/service/LB/SecurityGroup/to tpapidevclusterDefaultAutoScalingGroupInstanceSecurityGroupD933532C:32768-65535",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupEgress",
                          "aws:cdk:cloudformation:props": {
                            "groupId": "${Token[TOKEN.308]}",
                            "ipProtocol": "tcp",
                            "description": "Load balancer to target",
                            "destinationSecurityGroupId": "${Token[TOKEN.197]}",
                            "fromPort": 32768,
                            "toPort": 65535
                          }
                        }
                      }
                    }
                  },
                  "PublicListener": {
                    "id": "PublicListener",
                    "path": "tp-api-dev/service/LB/PublicListener",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-api-dev/service/LB/PublicListener/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                          "aws:cdk:cloudformation:props": {
                            "defaultActions": "<unresolved-lazy>",
                            "loadBalancerArn": "${Token[TOKEN.305]}",
                            "port": 443,
                            "protocol": "HTTPS",
                            "certificates": "<unresolved-lazy>"
                          }
                        }
                      },
                      "ECSGroup": {
                        "id": "ECSGroup",
                        "path": "tp-api-dev/service/LB/PublicListener/ECSGroup",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-api-dev/service/LB/PublicListener/ECSGroup/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                              "aws:cdk:cloudformation:props": {
                                "healthCheckIntervalSeconds": -1.8881545897088182e+289,
                                "healthCheckPath": "${Token[TOKEN.317]}",
                                "healthCheckPort": "${Token[TOKEN.318]}",
                                "healthCheckProtocol": "${Token[TOKEN.319]}",
                                "healthCheckTimeoutSeconds": -1.888154589708819e+289,
                                "healthyThresholdCount": -1.8881545897088193e+289,
                                "matcher": "<unresolved-lazy>",
                                "port": 80,
                                "protocol": "HTTP",
                                "targetGroupAttributes": "<unresolved-lazy>",
                                "targets": "<unresolved-lazy>",
                                "targetType": "${Token[TOKEN.314]}",
                                "unhealthyThresholdCount": -1.8881545897088195e+289,
                                "vpcId": "${Token[TOKEN.315]}"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "DNS": {
                "id": "DNS",
                "path": "tp-api-dev/service/DNS",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-api-dev/service/DNS/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                      "aws:cdk:cloudformation:props": {
                        "name": "api.typeparty.com.",
                        "type": "A",
                        "aliasTarget": {
                          "hostedZoneId": "${Token[TOKEN.300]}",
                          "dnsName": "${Token[TOKEN.301]}"
                        },
                        "hostedZoneId": "/hostedzone/Z1M48R5Z0AFHNH"
                      }
                    }
                  }
                }
              },
              "LoadBalancerDNS": {
                "id": "LoadBalancerDNS",
                "path": "tp-api-dev/service/LoadBalancerDNS"
              },
              "ServiceURL": {
                "id": "ServiceURL",
                "path": "tp-api-dev/service/ServiceURL"
              },
              "TaskDef": {
                "id": "TaskDef",
                "path": "tp-api-dev/service/TaskDef",
                "children": {
                  "TaskRole": {
                    "id": "TaskRole",
                    "path": "tp-api-dev/service/TaskDef/TaskRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-api-dev/service/TaskDef/TaskRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "${Token[ecs-tasks.amazonaws.com.335]}"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              "#{Token[TOKEN.336]}"
                            ],
                            "roleName": "${Token[TOKEN.334]}"
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "tp-api-dev/service/TaskDef/TaskRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-api-dev/service/TaskDef/TaskRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "s3:PutObject*",
                                        "s3:Abort*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "${Token[TOKEN.150]}/*"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "${Token[TOKEN.374]}",
                                "groups": [
                                  "#{Token[TOKEN.377]}"
                                ],
                                "roles": [
                                  "#{Token[TOKEN.375]}"
                                ],
                                "users": [
                                  "#{Token[TOKEN.376]}"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-api-dev/service/TaskDef/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                      "aws:cdk:cloudformation:props": {
                        "containerDefinitions": "<unresolved-lazy>",
                        "executionRoleArn": "${Token[TOKEN.343]}",
                        "family": "tpapidevserviceTaskDef311C7600",
                        "networkMode": "bridge",
                        "placementConstraints": "<unresolved-lazy>",
                        "requiresCompatibilities": [
                          "EC2"
                        ],
                        "taskRoleArn": "${Token[TOKEN.340]}",
                        "volumes": "<unresolved-lazy>"
                      }
                    }
                  },
                  "web": {
                    "id": "web",
                    "path": "tp-api-dev/service/TaskDef/web",
                    "children": {
                      "LogGroup": {
                        "id": "LogGroup",
                        "path": "tp-api-dev/service/TaskDef/web/LogGroup",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-api-dev/service/TaskDef/web/LogGroup/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                              "aws:cdk:cloudformation:props": {
                                "logGroupName": "${Token[TOKEN.360]}"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "ExecutionRole": {
                    "id": "ExecutionRole",
                    "path": "tp-api-dev/service/TaskDef/ExecutionRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-api-dev/service/TaskDef/ExecutionRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "${Token[ecs-tasks.amazonaws.com.347]}"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              "#{Token[TOKEN.348]}"
                            ],
                            "roleName": "${Token[TOKEN.346]}"
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "tp-api-dev/service/TaskDef/ExecutionRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-api-dev/service/TaskDef/ExecutionRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "ecr:BatchCheckLayerAvailability",
                                        "ecr:GetDownloadUrlForLayer",
                                        "ecr:BatchGetImage"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "${Token[TOKEN.14]}"
                                    },
                                    {
                                      "Action": "ecr:GetAuthorizationToken",
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    },
                                    {
                                      "Action": [
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "${Token[TOKEN.363]}"
                                    },
                                    {
                                      "Action": [
                                        "ssm:DescribeParameters",
                                        "ssm:GetParameters",
                                        "ssm:GetParameter",
                                        "ssm:GetParameterHistory"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "arn:${Token[AWS::Partition.3]}:ssm:us-east-1:561034361591:parameter/TpStaging/PRISMA_SECRET"
                                    },
                                    {
                                      "Action": [
                                        "ssm:DescribeParameters",
                                        "ssm:GetParameters",
                                        "ssm:GetParameter",
                                        "ssm:GetParameterHistory"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "arn:${Token[AWS::Partition.3]}:ssm:us-east-1:561034361591:parameter/TpStaging/PRISMA_ENDPOINT"
                                    },
                                    {
                                      "Action": [
                                        "ssm:DescribeParameters",
                                        "ssm:GetParameters",
                                        "ssm:GetParameter",
                                        "ssm:GetParameterHistory"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "arn:${Token[AWS::Partition.3]}:ssm:us-east-1:561034361591:parameter/TpStaging/PRISMA_MANAGEMENT_API_SECRET"
                                    },
                                    {
                                      "Action": [
                                        "ssm:DescribeParameters",
                                        "ssm:GetParameters",
                                        "ssm:GetParameter",
                                        "ssm:GetParameterHistory"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "arn:${Token[AWS::Partition.3]}:ssm:us-east-1:561034361591:parameter/TpStaging/APP_SECRET"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "${Token[TOKEN.355]}",
                                "groups": [
                                  "#{Token[TOKEN.358]}"
                                ],
                                "roles": [
                                  "#{Token[TOKEN.356]}"
                                ],
                                "users": [
                                  "#{Token[TOKEN.357]}"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Service": {
                "id": "Service",
                "path": "tp-api-dev/service/Service",
                "children": {
                  "Service": {
                    "id": "Service",
                    "path": "tp-api-dev/service/Service/Service",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                      "aws:cdk:cloudformation:props": {
                        "taskDefinition": "${Token[TOKEN.345]}",
                        "cluster": "${Token[TOKEN.193]}",
                        "deploymentConfiguration": {
                          "maximumPercent": 200,
                          "minimumHealthyPercent": 50
                        },
                        "desiredCount": 1,
                        "enableEcsManagedTags": false,
                        "healthCheckGracePeriodSeconds": "<unresolved-lazy>",
                        "launchType": "EC2",
                        "loadBalancers": "<unresolved-lazy>",
                        "networkConfiguration": "<unresolved-lazy>",
                        "placementConstraints": "<unresolved-lazy>",
                        "placementStrategies": "<unresolved-lazy>",
                        "schedulingStrategy": "REPLICA",
                        "serviceName": "${Token[TOKEN.366]}",
                        "serviceRegistries": "<unresolved-lazy>"
                      }
                    }
                  }
                }
              }
            }
          },
          "ServiceName": {
            "id": "ServiceName",
            "path": "tp-api-dev/ServiceName"
          },
          "ClusterName": {
            "id": "ClusterName",
            "path": "tp-api-dev/ClusterName"
          }
        }
      },
      "tp-frontend-dev": {
        "id": "tp-frontend-dev",
        "path": "tp-frontend-dev",
        "children": {
          "cluster": {
            "id": "cluster",
            "path": "tp-frontend-dev/cluster",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "tp-frontend-dev/cluster/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                  "aws:cdk:cloudformation:props": {
                    "clusterName": "${Token[TOKEN.382]}"
                  }
                }
              },
              "DefaultAutoScalingGroup": {
                "id": "DefaultAutoScalingGroup",
                "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup",
                "children": {
                  "InstanceSecurityGroup": {
                    "id": "InstanceSecurityGroup",
                    "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/InstanceSecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/InstanceSecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/InstanceSecurityGroup",
                            "groupName": "${Token[TOKEN.389]}",
                            "securityGroupEgress": "<unresolved-lazy>",
                            "securityGroupIngress": "<unresolved-lazy>",
                            "tags": [
                              {
                                "key": "Name",
                                "value": "tp-frontend-dev/cluster/DefaultAutoScalingGroup"
                              }
                            ],
                            "vpcId": "${Token[TOKEN.28]}"
                          }
                        }
                      },
                      "from tpfrontenddevserviceLBSecurityGroup4F1F24BF:32768-65535": {
                        "id": "from tpfrontenddevserviceLBSecurityGroup4F1F24BF:32768-65535",
                        "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/InstanceSecurityGroup/from tpfrontenddevserviceLBSecurityGroup4F1F24BF:32768-65535",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                          "aws:cdk:cloudformation:props": {
                            "ipProtocol": "tcp",
                            "description": "Load balancer to target",
                            "fromPort": 32768,
                            "groupId": "${Token[TOKEN.391]}",
                            "sourceSecurityGroupId": "${Token[TOKEN.493]}",
                            "toPort": 65535
                          }
                        }
                      }
                    }
                  },
                  "InstanceRole": {
                    "id": "InstanceRole",
                    "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/InstanceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/InstanceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "${Token[ec2.amazonaws.com.395]}"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              "#{Token[TOKEN.396]}"
                            ],
                            "roleName": "${Token[TOKEN.394]}",
                            "tags": [
                              {
                                "key": "Name",
                                "value": "tp-frontend-dev/cluster/DefaultAutoScalingGroup"
                              }
                            ]
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/InstanceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/InstanceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "ecs:CreateCluster",
                                        "ecs:DeregisterContainerInstance",
                                        "ecs:DiscoverPollEndpoint",
                                        "ecs:Poll",
                                        "ecs:RegisterContainerInstance",
                                        "ecs:StartTelemetrySession",
                                        "ecs:Submit*",
                                        "ecr:GetAuthorizationToken",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "${Token[TOKEN.417]}",
                                "groups": [
                                  "#{Token[TOKEN.420]}"
                                ],
                                "roles": [
                                  "#{Token[TOKEN.418]}"
                                ],
                                "users": [
                                  "#{Token[TOKEN.419]}"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "InstanceProfile": {
                    "id": "InstanceProfile",
                    "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/InstanceProfile",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                      "aws:cdk:cloudformation:props": {
                        "roles": [
                          "${Token[TOKEN.402]}"
                        ]
                      }
                    }
                  },
                  "LaunchConfig": {
                    "id": "LaunchConfig",
                    "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/LaunchConfig",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::AutoScaling::LaunchConfiguration",
                      "aws:cdk:cloudformation:props": {
                        "imageId": "${Token[TOKEN.406]}",
                        "instanceType": "t2.small",
                        "iamInstanceProfile": "${Token[TOKEN.410]}",
                        "securityGroups": [
                          "#{Token[TOKEN.409]}"
                        ],
                        "spotPrice": "0.023",
                        "userData": "${Token[TOKEN.408]}"
                      }
                    }
                  },
                  "ASG": {
                    "id": "ASG",
                    "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/ASG",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::AutoScaling::AutoScalingGroup",
                      "aws:cdk:cloudformation:props": {
                        "maxSize": "1",
                        "minSize": "1",
                        "desiredCapacity": "1",
                        "launchConfigurationName": "${Token[TOKEN.412]}",
                        "loadBalancerNames": [
                          "#{Token[TOKEN.413]}"
                        ],
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-frontend-dev/cluster/DefaultAutoScalingGroup",
                            "propagateAtLaunch": true
                          }
                        ],
                        "targetGroupArns": [
                          "#{Token[TOKEN.414]}"
                        ],
                        "vpcZoneIdentifier": [
                          "${Token[TOKEN.59]}",
                          "${Token[TOKEN.71]}"
                        ]
                      }
                    }
                  },
                  "DrainECSHook": {
                    "id": "DrainECSHook",
                    "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/DrainECSHook",
                    "children": {
                      "Function": {
                        "id": "Function",
                        "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function",
                        "children": {
                          "ServiceRole": {
                            "id": "ServiceRole",
                            "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "${Token[lambda.amazonaws.com.425]}"
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "managedPolicyArns": [
                                      "#{Token[TOKEN.426]}"
                                    ],
                                    "roleName": "${Token[TOKEN.424]}",
                                    "tags": [
                                      {
                                        "key": "Name",
                                        "value": "tp-frontend-dev/cluster/DefaultAutoScalingGroup"
                                      }
                                    ]
                                  }
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "ec2:DescribeInstances",
                                                "ec2:DescribeInstanceAttribute",
                                                "ec2:DescribeInstanceStatus",
                                                "ec2:DescribeHosts"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            },
                                            {
                                              "Action": "autoscaling:CompleteLifecycleAction",
                                              "Effect": "Allow",
                                              "Resource": "arn:${Token[AWS::Partition.3]}:autoscaling:us-east-1:561034361591:autoScalingGroup:*:autoScalingGroupName/${Token[TOKEN.416]}"
                                            },
                                            {
                                              "Action": [
                                                "ecs:DescribeContainerInstances",
                                                "ecs:DescribeTasks"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            },
                                            {
                                              "Action": [
                                                "ecs:ListContainerInstances",
                                                "ecs:SubmitContainerStateChange",
                                                "ecs:SubmitTaskStateChange"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "${Token[TOKEN.385]}"
                                            },
                                            {
                                              "Action": [
                                                "ecs:UpdateContainerInstancesState",
                                                "ecs:ListTasks"
                                              ],
                                              "Condition": {
                                                "ArnEquals": {
                                                  "ecs:cluster": "${Token[TOKEN.385]}"
                                                }
                                              },
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "${Token[TOKEN.465]}",
                                        "groups": [
                                          "#{Token[TOKEN.468]}"
                                        ],
                                        "roles": [
                                          "#{Token[TOKEN.466]}"
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.467]}"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                              "aws:cdk:cloudformation:props": {
                                "code": {
                                  "zipFile": "import boto3, json, os, time\n\necs = boto3.client('ecs')\nautoscaling = boto3.client('autoscaling')\n\n\ndef lambda_handler(event, context):\n  print(json.dumps(event))\n  cluster = os.environ['CLUSTER']\n  snsTopicArn = event['Records'][0]['Sns']['TopicArn']\n  lifecycle_event = json.loads(event['Records'][0]['Sns']['Message'])\n  instance_id = lifecycle_event.get('EC2InstanceId')\n  if not instance_id:\n    print('Got event without EC2InstanceId: %s', json.dumps(event))\n    return\n\n  instance_arn = container_instance_arn(cluster, instance_id)\n  print('Instance %s has container instance ARN %s' % (lifecycle_event['EC2InstanceId'], instance_arn))\n\n  if not instance_arn:\n    return\n\n  while has_tasks(cluster, instance_arn):\n    time.sleep(10)\n\n  try:\n    print('Terminating instance %s' % instance_id)\n    autoscaling.complete_lifecycle_action(\n        LifecycleActionResult='CONTINUE',\n        **pick(lifecycle_event, 'LifecycleHookName', 'LifecycleActionToken', 'AutoScalingGroupName'))\n  except Exception as e:\n    # Lifecycle action may have already completed.\n    print(str(e))\n\n\ndef container_instance_arn(cluster, instance_id):\n  \"\"\"Turn an instance ID into a container instance ARN.\"\"\"\n  arns = ecs.list_container_instances(cluster=cluster, filter='ec2InstanceId==' + instance_id)['containerInstanceArns']\n  if not arns:\n    return None\n  return arns[0]\n\n\ndef has_tasks(cluster, instance_arn):\n  \"\"\"Return True if the instance is running tasks for the given cluster.\"\"\"\n  instances = ecs.describe_container_instances(cluster=cluster, containerInstances=[instance_arn])['containerInstances']\n  if not instances:\n    return False\n  instance = instances[0]\n\n  if instance['status'] == 'ACTIVE':\n    # Start draining, then try again later\n    set_container_instance_to_draining(cluster, instance_arn)\n    return True\n\n  tasks = instance['runningTasksCount'] + instance['pendingTasksCount']\n  print('Instance %s has %s tasks' % (instance_arn, tasks))\n\n  return tasks > 0\n\n\ndef set_container_instance_to_draining(cluster, instance_arn):\n  ecs.update_container_instances_state(\n      cluster=cluster,\n      containerInstances=[instance_arn], status='DRAINING')\n\n\ndef pick(dct, *keys):\n  \"\"\"Pick a subset of a dict.\"\"\"\n  return {k: v for k, v in dct.items() if k in keys}\n"
                                },
                                "handler": "index.lambda_handler",
                                "role": "${Token[TOKEN.430]}",
                                "runtime": "python3.6",
                                "environment": "<unresolved-lazy>",
                                "functionName": "${Token[TOKEN.422]}",
                                "layers": [
                                  "#{Token[TOKEN.433]}"
                                ],
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "tp-frontend-dev/cluster/DefaultAutoScalingGroup"
                                  }
                                ],
                                "timeout": 310
                              }
                            }
                          },
                          "AllowInvoke:tpfrontenddevclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic8C275AD4": {
                            "id": "AllowInvoke:tpfrontenddevclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic8C275AD4",
                            "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/AllowInvoke:tpfrontenddevclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic8C275AD4",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": "${Token[TOKEN.438]}",
                                "principal": "sns.amazonaws.com",
                                "sourceArn": "${Token[TOKEN.453]}"
                              }
                            }
                          },
                          "Topic": {
                            "id": "Topic",
                            "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Topic",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Topic/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::SNS::Subscription",
                                  "aws:cdk:cloudformation:props": {
                                    "protocol": "lambda",
                                    "topicArn": "${Token[TOKEN.453]}",
                                    "endpoint": "${Token[TOKEN.438]}"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "LifecycleHookDrainHook": {
                    "id": "LifecycleHookDrainHook",
                    "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook",
                    "children": {
                      "Role": {
                        "id": "Role",
                        "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "${Token[autoscaling.amazonaws.com.441]}"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "managedPolicyArns": [
                                  "#{Token[TOKEN.442]}"
                                ],
                                "roleName": "${Token[TOKEN.440]}",
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "tp-frontend-dev/cluster/DefaultAutoScalingGroup"
                                  }
                                ]
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sns:Publish",
                                          "Effect": "Allow",
                                          "Resource": "${Token[TOKEN.453]}"
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "${Token[TOKEN.458]}",
                                    "groups": [
                                      "#{Token[TOKEN.461]}"
                                    ],
                                    "roles": [
                                      "#{Token[TOKEN.459]}"
                                    ],
                                    "users": [
                                      "#{Token[TOKEN.460]}"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Topic": {
                        "id": "Topic",
                        "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Topic",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Topic/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::SNS::Topic",
                              "aws:cdk:cloudformation:props": {
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "tp-frontend-dev/cluster/DefaultAutoScalingGroup"
                                  }
                                ],
                                "topicName": "${Token[TOKEN.449]}"
                              }
                            }
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-frontend-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::AutoScaling::LifecycleHook",
                          "aws:cdk:cloudformation:props": {
                            "autoScalingGroupName": "${Token[TOKEN.416]}",
                            "lifecycleTransition": "autoscaling:EC2_INSTANCE_TERMINATING",
                            "defaultResult": "CONTINUE",
                            "heartbeatTimeout": 300,
                            "lifecycleHookName": "${Token[TOKEN.439]}",
                            "notificationTargetArn": "${Token[TOKEN.453]}",
                            "roleArn": "${Token[TOKEN.446]}"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": {
            "id": "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "path": "tp-frontend-dev/SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter"
          },
          "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118": {
            "id": "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "path": "tp-frontend-dev/SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118"
          },
          "API_URL.Parameter": {
            "id": "API_URL.Parameter",
            "path": "tp-frontend-dev/API_URL.Parameter"
          },
          "API_URL": {
            "id": "API_URL",
            "path": "tp-frontend-dev/API_URL"
          },
          "service": {
            "id": "service",
            "path": "tp-frontend-dev/service",
            "children": {
              "LB": {
                "id": "LB",
                "path": "tp-frontend-dev/service/LB",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-frontend-dev/service/LB/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                      "aws:cdk:cloudformation:props": {
                        "loadBalancerAttributes": "<unresolved-lazy>",
                        "name": "${Token[TOKEN.483]}",
                        "scheme": "internet-facing",
                        "securityGroups": [
                          "#{Token[TOKEN.482]}"
                        ],
                        "subnets": [
                          "${Token[TOKEN.35]}",
                          "${Token[TOKEN.47]}"
                        ],
                        "type": "application"
                      }
                    }
                  },
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "tp-frontend-dev/service/LB/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-frontend-dev/service/LB/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "Automatically created Security Group for ELB tpfrontenddevserviceLB2BABCCAA",
                            "groupName": "${Token[TOKEN.491]}",
                            "securityGroupEgress": "<unresolved-lazy>",
                            "securityGroupIngress": "<unresolved-lazy>",
                            "vpcId": "${Token[TOKEN.28]}"
                          }
                        }
                      },
                      "to tpfrontenddevclusterDefaultAutoScalingGroupInstanceSecurityGroup8D1545AC:32768-65535": {
                        "id": "to tpfrontenddevclusterDefaultAutoScalingGroupInstanceSecurityGroup8D1545AC:32768-65535",
                        "path": "tp-frontend-dev/service/LB/SecurityGroup/to tpfrontenddevclusterDefaultAutoScalingGroupInstanceSecurityGroup8D1545AC:32768-65535",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupEgress",
                          "aws:cdk:cloudformation:props": {
                            "groupId": "${Token[TOKEN.493]}",
                            "ipProtocol": "tcp",
                            "description": "Load balancer to target",
                            "destinationSecurityGroupId": "${Token[TOKEN.391]}",
                            "fromPort": 32768,
                            "toPort": 65535
                          }
                        }
                      }
                    }
                  },
                  "PublicListener": {
                    "id": "PublicListener",
                    "path": "tp-frontend-dev/service/LB/PublicListener",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-frontend-dev/service/LB/PublicListener/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                          "aws:cdk:cloudformation:props": {
                            "defaultActions": "<unresolved-lazy>",
                            "loadBalancerArn": "${Token[TOKEN.490]}",
                            "port": 443,
                            "protocol": "HTTPS",
                            "certificates": "<unresolved-lazy>"
                          }
                        }
                      },
                      "ECSGroup": {
                        "id": "ECSGroup",
                        "path": "tp-frontend-dev/service/LB/PublicListener/ECSGroup",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-frontend-dev/service/LB/PublicListener/ECSGroup/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                              "aws:cdk:cloudformation:props": {
                                "healthCheckIntervalSeconds": -1.8881545897088582e+289,
                                "healthCheckPath": "${Token[TOKEN.502]}",
                                "healthCheckPort": "${Token[TOKEN.503]}",
                                "healthCheckProtocol": "${Token[TOKEN.504]}",
                                "healthCheckTimeoutSeconds": -1.888154589708859e+289,
                                "healthyThresholdCount": -1.8881545897088593e+289,
                                "matcher": "<unresolved-lazy>",
                                "port": 80,
                                "protocol": "HTTP",
                                "targetGroupAttributes": "<unresolved-lazy>",
                                "targets": "<unresolved-lazy>",
                                "targetType": "${Token[TOKEN.499]}",
                                "unhealthyThresholdCount": -1.8881545897088595e+289,
                                "vpcId": "${Token[TOKEN.500]}"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "HTTP": {
                    "id": "HTTP",
                    "path": "tp-frontend-dev/service/LB/HTTP",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-frontend-dev/service/LB/HTTP/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                          "aws:cdk:cloudformation:props": {
                            "defaultActions": "<unresolved-lazy>",
                            "loadBalancerArn": "${Token[TOKEN.490]}",
                            "port": 80,
                            "protocol": "HTTP",
                            "certificates": "<unresolved-lazy>"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "DNS": {
                "id": "DNS",
                "path": "tp-frontend-dev/service/DNS",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-frontend-dev/service/DNS/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                      "aws:cdk:cloudformation:props": {
                        "name": "www.typeparty.com.",
                        "type": "A",
                        "aliasTarget": {
                          "hostedZoneId": "${Token[TOKEN.485]}",
                          "dnsName": "${Token[TOKEN.486]}"
                        },
                        "hostedZoneId": "/hostedzone/Z1M48R5Z0AFHNH"
                      }
                    }
                  }
                }
              },
              "LoadBalancerDNS": {
                "id": "LoadBalancerDNS",
                "path": "tp-frontend-dev/service/LoadBalancerDNS"
              },
              "ServiceURL": {
                "id": "ServiceURL",
                "path": "tp-frontend-dev/service/ServiceURL"
              },
              "TaskDef": {
                "id": "TaskDef",
                "path": "tp-frontend-dev/service/TaskDef",
                "children": {
                  "TaskRole": {
                    "id": "TaskRole",
                    "path": "tp-frontend-dev/service/TaskDef/TaskRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-frontend-dev/service/TaskDef/TaskRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "${Token[ecs-tasks.amazonaws.com.520]}"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              "#{Token[TOKEN.521]}"
                            ],
                            "roleName": "${Token[TOKEN.519]}"
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-frontend-dev/service/TaskDef/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                      "aws:cdk:cloudformation:props": {
                        "containerDefinitions": "<unresolved-lazy>",
                        "executionRoleArn": "${Token[TOKEN.528]}",
                        "family": "tpfrontenddevserviceTaskDef7437B0A1",
                        "networkMode": "bridge",
                        "placementConstraints": "<unresolved-lazy>",
                        "requiresCompatibilities": [
                          "EC2"
                        ],
                        "taskRoleArn": "${Token[TOKEN.525]}",
                        "volumes": "<unresolved-lazy>"
                      }
                    }
                  },
                  "web": {
                    "id": "web",
                    "path": "tp-frontend-dev/service/TaskDef/web",
                    "children": {
                      "LogGroup": {
                        "id": "LogGroup",
                        "path": "tp-frontend-dev/service/TaskDef/web/LogGroup",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-frontend-dev/service/TaskDef/web/LogGroup/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                              "aws:cdk:cloudformation:props": {
                                "logGroupName": "${Token[TOKEN.545]}"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "ExecutionRole": {
                    "id": "ExecutionRole",
                    "path": "tp-frontend-dev/service/TaskDef/ExecutionRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-frontend-dev/service/TaskDef/ExecutionRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "${Token[ecs-tasks.amazonaws.com.532]}"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              "#{Token[TOKEN.533]}"
                            ],
                            "roleName": "${Token[TOKEN.531]}"
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "tp-frontend-dev/service/TaskDef/ExecutionRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-frontend-dev/service/TaskDef/ExecutionRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "ecr:BatchCheckLayerAvailability",
                                        "ecr:GetDownloadUrlForLayer",
                                        "ecr:BatchGetImage"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "${Token[TOKEN.19]}"
                                    },
                                    {
                                      "Action": "ecr:GetAuthorizationToken",
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    },
                                    {
                                      "Action": [
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "${Token[TOKEN.548]}"
                                    },
                                    {
                                      "Action": [
                                        "ssm:DescribeParameters",
                                        "ssm:GetParameters",
                                        "ssm:GetParameter",
                                        "ssm:GetParameterHistory"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "arn:${Token[AWS::Partition.3]}:ssm:us-east-1:561034361591:parameter/TpStaging/API_URL"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "${Token[TOKEN.540]}",
                                "groups": [
                                  "#{Token[TOKEN.543]}"
                                ],
                                "roles": [
                                  "#{Token[TOKEN.541]}"
                                ],
                                "users": [
                                  "#{Token[TOKEN.542]}"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Service": {
                "id": "Service",
                "path": "tp-frontend-dev/service/Service",
                "children": {
                  "Service": {
                    "id": "Service",
                    "path": "tp-frontend-dev/service/Service/Service",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                      "aws:cdk:cloudformation:props": {
                        "taskDefinition": "${Token[TOKEN.530]}",
                        "cluster": "${Token[TOKEN.387]}",
                        "deploymentConfiguration": {
                          "maximumPercent": 200,
                          "minimumHealthyPercent": 50
                        },
                        "desiredCount": 1,
                        "enableEcsManagedTags": false,
                        "healthCheckGracePeriodSeconds": "<unresolved-lazy>",
                        "launchType": "EC2",
                        "loadBalancers": "<unresolved-lazy>",
                        "networkConfiguration": "<unresolved-lazy>",
                        "placementConstraints": "<unresolved-lazy>",
                        "placementStrategies": "<unresolved-lazy>",
                        "schedulingStrategy": "REPLICA",
                        "serviceName": "${Token[TOKEN.551]}",
                        "serviceRegistries": "<unresolved-lazy>"
                      }
                    }
                  }
                }
              }
            }
          },
          "ServiceName": {
            "id": "ServiceName",
            "path": "tp-frontend-dev/ServiceName"
          },
          "ClusterName": {
            "id": "ClusterName",
            "path": "tp-frontend-dev/ClusterName"
          }
        }
      },
      "tp-prisma-dev": {
        "id": "tp-prisma-dev",
        "path": "tp-prisma-dev",
        "children": {
          "cluster": {
            "id": "cluster",
            "path": "tp-prisma-dev/cluster",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "tp-prisma-dev/cluster/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                  "aws:cdk:cloudformation:props": {
                    "clusterName": "${Token[TOKEN.565]}"
                  }
                }
              },
              "DefaultAutoScalingGroup": {
                "id": "DefaultAutoScalingGroup",
                "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup",
                "children": {
                  "InstanceSecurityGroup": {
                    "id": "InstanceSecurityGroup",
                    "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/InstanceSecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/InstanceSecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/InstanceSecurityGroup",
                            "groupName": "${Token[TOKEN.572]}",
                            "securityGroupEgress": "<unresolved-lazy>",
                            "securityGroupIngress": "<unresolved-lazy>",
                            "tags": [
                              {
                                "key": "Name",
                                "value": "tp-prisma-dev/cluster/DefaultAutoScalingGroup"
                              }
                            ],
                            "vpcId": "${Token[TOKEN.28]}"
                          }
                        }
                      },
                      "from tpprismadevprismaLBSecurityGroup1217B50B:32768-65535": {
                        "id": "from tpprismadevprismaLBSecurityGroup1217B50B:32768-65535",
                        "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/InstanceSecurityGroup/from tpprismadevprismaLBSecurityGroup1217B50B:32768-65535",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                          "aws:cdk:cloudformation:props": {
                            "ipProtocol": "tcp",
                            "description": "Load balancer to target",
                            "fromPort": 32768,
                            "groupId": "${Token[TOKEN.574]}",
                            "sourceSecurityGroupId": "${Token[TOKEN.665]}",
                            "toPort": 65535
                          }
                        }
                      },
                      "from 0.0.0.0_0:{IndirectPort}": {
                        "id": "from 0.0.0.0_0:{IndirectPort}",
                        "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/InstanceSecurityGroup/from 0.0.0.0_0:{IndirectPort}",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                          "aws:cdk:cloudformation:props": {
                            "ipProtocol": "tcp",
                            "cidrIp": "0.0.0.0/0",
                            "description": "from 0.0.0.0/0:{IndirectPort}",
                            "fromPort": -1.8881545897087881e+289,
                            "groupId": "${Token[TOKEN.574]}",
                            "toPort": -1.8881545897087881e+289
                          }
                        }
                      }
                    }
                  },
                  "InstanceRole": {
                    "id": "InstanceRole",
                    "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/InstanceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/InstanceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "${Token[ec2.amazonaws.com.578]}"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              "#{Token[TOKEN.579]}"
                            ],
                            "roleName": "${Token[TOKEN.577]}",
                            "tags": [
                              {
                                "key": "Name",
                                "value": "tp-prisma-dev/cluster/DefaultAutoScalingGroup"
                              }
                            ]
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/InstanceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/InstanceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "ecs:CreateCluster",
                                        "ecs:DeregisterContainerInstance",
                                        "ecs:DiscoverPollEndpoint",
                                        "ecs:Poll",
                                        "ecs:RegisterContainerInstance",
                                        "ecs:StartTelemetrySession",
                                        "ecs:Submit*",
                                        "ecr:GetAuthorizationToken",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "${Token[TOKEN.600]}",
                                "groups": [
                                  "#{Token[TOKEN.603]}"
                                ],
                                "roles": [
                                  "#{Token[TOKEN.601]}"
                                ],
                                "users": [
                                  "#{Token[TOKEN.602]}"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "InstanceProfile": {
                    "id": "InstanceProfile",
                    "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/InstanceProfile",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                      "aws:cdk:cloudformation:props": {
                        "roles": [
                          "${Token[TOKEN.585]}"
                        ]
                      }
                    }
                  },
                  "LaunchConfig": {
                    "id": "LaunchConfig",
                    "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/LaunchConfig",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::AutoScaling::LaunchConfiguration",
                      "aws:cdk:cloudformation:props": {
                        "imageId": "${Token[TOKEN.589]}",
                        "instanceType": "t2.small",
                        "iamInstanceProfile": "${Token[TOKEN.593]}",
                        "securityGroups": [
                          "#{Token[TOKEN.592]}"
                        ],
                        "spotPrice": "0.023",
                        "userData": "${Token[TOKEN.591]}"
                      }
                    }
                  },
                  "ASG": {
                    "id": "ASG",
                    "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/ASG",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::AutoScaling::AutoScalingGroup",
                      "aws:cdk:cloudformation:props": {
                        "maxSize": "1",
                        "minSize": "1",
                        "desiredCapacity": "1",
                        "launchConfigurationName": "${Token[TOKEN.595]}",
                        "loadBalancerNames": [
                          "#{Token[TOKEN.596]}"
                        ],
                        "tags": [
                          {
                            "key": "Name",
                            "value": "tp-prisma-dev/cluster/DefaultAutoScalingGroup",
                            "propagateAtLaunch": true
                          }
                        ],
                        "targetGroupArns": [
                          "#{Token[TOKEN.597]}"
                        ],
                        "vpcZoneIdentifier": [
                          "${Token[TOKEN.59]}",
                          "${Token[TOKEN.71]}"
                        ]
                      }
                    }
                  },
                  "DrainECSHook": {
                    "id": "DrainECSHook",
                    "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/DrainECSHook",
                    "children": {
                      "Function": {
                        "id": "Function",
                        "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function",
                        "children": {
                          "ServiceRole": {
                            "id": "ServiceRole",
                            "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "${Token[lambda.amazonaws.com.608]}"
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "managedPolicyArns": [
                                      "#{Token[TOKEN.609]}"
                                    ],
                                    "roleName": "${Token[TOKEN.607]}",
                                    "tags": [
                                      {
                                        "key": "Name",
                                        "value": "tp-prisma-dev/cluster/DefaultAutoScalingGroup"
                                      }
                                    ]
                                  }
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "ec2:DescribeInstances",
                                                "ec2:DescribeInstanceAttribute",
                                                "ec2:DescribeInstanceStatus",
                                                "ec2:DescribeHosts"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            },
                                            {
                                              "Action": "autoscaling:CompleteLifecycleAction",
                                              "Effect": "Allow",
                                              "Resource": "arn:${Token[AWS::Partition.3]}:autoscaling:us-east-1:561034361591:autoScalingGroup:*:autoScalingGroupName/${Token[TOKEN.599]}"
                                            },
                                            {
                                              "Action": [
                                                "ecs:DescribeContainerInstances",
                                                "ecs:DescribeTasks"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            },
                                            {
                                              "Action": [
                                                "ecs:ListContainerInstances",
                                                "ecs:SubmitContainerStateChange",
                                                "ecs:SubmitTaskStateChange"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "${Token[TOKEN.568]}"
                                            },
                                            {
                                              "Action": [
                                                "ecs:UpdateContainerInstancesState",
                                                "ecs:ListTasks"
                                              ],
                                              "Condition": {
                                                "ArnEquals": {
                                                  "ecs:cluster": "${Token[TOKEN.568]}"
                                                }
                                              },
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "${Token[TOKEN.648]}",
                                        "groups": [
                                          "#{Token[TOKEN.651]}"
                                        ],
                                        "roles": [
                                          "#{Token[TOKEN.649]}"
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.650]}"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                              "aws:cdk:cloudformation:props": {
                                "code": {
                                  "zipFile": "import boto3, json, os, time\n\necs = boto3.client('ecs')\nautoscaling = boto3.client('autoscaling')\n\n\ndef lambda_handler(event, context):\n  print(json.dumps(event))\n  cluster = os.environ['CLUSTER']\n  snsTopicArn = event['Records'][0]['Sns']['TopicArn']\n  lifecycle_event = json.loads(event['Records'][0]['Sns']['Message'])\n  instance_id = lifecycle_event.get('EC2InstanceId')\n  if not instance_id:\n    print('Got event without EC2InstanceId: %s', json.dumps(event))\n    return\n\n  instance_arn = container_instance_arn(cluster, instance_id)\n  print('Instance %s has container instance ARN %s' % (lifecycle_event['EC2InstanceId'], instance_arn))\n\n  if not instance_arn:\n    return\n\n  while has_tasks(cluster, instance_arn):\n    time.sleep(10)\n\n  try:\n    print('Terminating instance %s' % instance_id)\n    autoscaling.complete_lifecycle_action(\n        LifecycleActionResult='CONTINUE',\n        **pick(lifecycle_event, 'LifecycleHookName', 'LifecycleActionToken', 'AutoScalingGroupName'))\n  except Exception as e:\n    # Lifecycle action may have already completed.\n    print(str(e))\n\n\ndef container_instance_arn(cluster, instance_id):\n  \"\"\"Turn an instance ID into a container instance ARN.\"\"\"\n  arns = ecs.list_container_instances(cluster=cluster, filter='ec2InstanceId==' + instance_id)['containerInstanceArns']\n  if not arns:\n    return None\n  return arns[0]\n\n\ndef has_tasks(cluster, instance_arn):\n  \"\"\"Return True if the instance is running tasks for the given cluster.\"\"\"\n  instances = ecs.describe_container_instances(cluster=cluster, containerInstances=[instance_arn])['containerInstances']\n  if not instances:\n    return False\n  instance = instances[0]\n\n  if instance['status'] == 'ACTIVE':\n    # Start draining, then try again later\n    set_container_instance_to_draining(cluster, instance_arn)\n    return True\n\n  tasks = instance['runningTasksCount'] + instance['pendingTasksCount']\n  print('Instance %s has %s tasks' % (instance_arn, tasks))\n\n  return tasks > 0\n\n\ndef set_container_instance_to_draining(cluster, instance_arn):\n  ecs.update_container_instances_state(\n      cluster=cluster,\n      containerInstances=[instance_arn], status='DRAINING')\n\n\ndef pick(dct, *keys):\n  \"\"\"Pick a subset of a dict.\"\"\"\n  return {k: v for k, v in dct.items() if k in keys}\n"
                                },
                                "handler": "index.lambda_handler",
                                "role": "${Token[TOKEN.613]}",
                                "runtime": "python3.6",
                                "environment": "<unresolved-lazy>",
                                "functionName": "${Token[TOKEN.605]}",
                                "layers": [
                                  "#{Token[TOKEN.616]}"
                                ],
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "tp-prisma-dev/cluster/DefaultAutoScalingGroup"
                                  }
                                ],
                                "timeout": 310
                              }
                            }
                          },
                          "AllowInvoke:tpprismadevclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicFC55CCAE": {
                            "id": "AllowInvoke:tpprismadevclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicFC55CCAE",
                            "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/AllowInvoke:tpprismadevclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicFC55CCAE",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": "${Token[TOKEN.621]}",
                                "principal": "sns.amazonaws.com",
                                "sourceArn": "${Token[TOKEN.636]}"
                              }
                            }
                          },
                          "Topic": {
                            "id": "Topic",
                            "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Topic",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Topic/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::SNS::Subscription",
                                  "aws:cdk:cloudformation:props": {
                                    "protocol": "lambda",
                                    "topicArn": "${Token[TOKEN.636]}",
                                    "endpoint": "${Token[TOKEN.621]}"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "LifecycleHookDrainHook": {
                    "id": "LifecycleHookDrainHook",
                    "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook",
                    "children": {
                      "Role": {
                        "id": "Role",
                        "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "${Token[autoscaling.amazonaws.com.624]}"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "managedPolicyArns": [
                                  "#{Token[TOKEN.625]}"
                                ],
                                "roleName": "${Token[TOKEN.623]}",
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "tp-prisma-dev/cluster/DefaultAutoScalingGroup"
                                  }
                                ]
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sns:Publish",
                                          "Effect": "Allow",
                                          "Resource": "${Token[TOKEN.636]}"
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "${Token[TOKEN.641]}",
                                    "groups": [
                                      "#{Token[TOKEN.644]}"
                                    ],
                                    "roles": [
                                      "#{Token[TOKEN.642]}"
                                    ],
                                    "users": [
                                      "#{Token[TOKEN.643]}"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Topic": {
                        "id": "Topic",
                        "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Topic",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Topic/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::SNS::Topic",
                              "aws:cdk:cloudformation:props": {
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "tp-prisma-dev/cluster/DefaultAutoScalingGroup"
                                  }
                                ],
                                "topicName": "${Token[TOKEN.632]}"
                              }
                            }
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-prisma-dev/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::AutoScaling::LifecycleHook",
                          "aws:cdk:cloudformation:props": {
                            "autoScalingGroupName": "${Token[TOKEN.599]}",
                            "lifecycleTransition": "autoscaling:EC2_INSTANCE_TERMINATING",
                            "defaultResult": "CONTINUE",
                            "heartbeatTimeout": 300,
                            "lifecycleHookName": "${Token[TOKEN.622]}",
                            "notificationTargetArn": "${Token[TOKEN.636]}",
                            "roleArn": "${Token[TOKEN.629]}"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": {
            "id": "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "path": "tp-prisma-dev/SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter"
          },
          "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118": {
            "id": "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "path": "tp-prisma-dev/SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118"
          },
          "prisma": {
            "id": "prisma",
            "path": "tp-prisma-dev/prisma",
            "children": {
              "LB": {
                "id": "LB",
                "path": "tp-prisma-dev/prisma/LB",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-prisma-dev/prisma/LB/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                      "aws:cdk:cloudformation:props": {
                        "loadBalancerAttributes": "<unresolved-lazy>",
                        "name": "${Token[TOKEN.655]}",
                        "scheme": "internet-facing",
                        "securityGroups": [
                          "#{Token[TOKEN.654]}"
                        ],
                        "subnets": [
                          "${Token[TOKEN.35]}",
                          "${Token[TOKEN.47]}"
                        ],
                        "type": "application"
                      }
                    }
                  },
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "tp-prisma-dev/prisma/LB/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-prisma-dev/prisma/LB/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "Automatically created Security Group for ELB tpprismadevprismaLB81CFBA31",
                            "groupName": "${Token[TOKEN.663]}",
                            "securityGroupEgress": "<unresolved-lazy>",
                            "securityGroupIngress": "<unresolved-lazy>",
                            "vpcId": "${Token[TOKEN.28]}"
                          }
                        }
                      },
                      "to tpprismadevclusterDefaultAutoScalingGroupInstanceSecurityGroup5BA0D893:32768-65535": {
                        "id": "to tpprismadevclusterDefaultAutoScalingGroupInstanceSecurityGroup5BA0D893:32768-65535",
                        "path": "tp-prisma-dev/prisma/LB/SecurityGroup/to tpprismadevclusterDefaultAutoScalingGroupInstanceSecurityGroup5BA0D893:32768-65535",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupEgress",
                          "aws:cdk:cloudformation:props": {
                            "groupId": "${Token[TOKEN.665]}",
                            "ipProtocol": "tcp",
                            "description": "Load balancer to target",
                            "destinationSecurityGroupId": "${Token[TOKEN.574]}",
                            "fromPort": 32768,
                            "toPort": 65535
                          }
                        }
                      }
                    }
                  },
                  "PublicListener": {
                    "id": "PublicListener",
                    "path": "tp-prisma-dev/prisma/LB/PublicListener",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-prisma-dev/prisma/LB/PublicListener/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                          "aws:cdk:cloudformation:props": {
                            "defaultActions": "<unresolved-lazy>",
                            "loadBalancerArn": "${Token[TOKEN.662]}",
                            "port": 443,
                            "protocol": "HTTPS",
                            "certificates": "<unresolved-lazy>"
                          }
                        }
                      },
                      "ECSGroup": {
                        "id": "ECSGroup",
                        "path": "tp-prisma-dev/prisma/LB/PublicListener/ECSGroup",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-prisma-dev/prisma/LB/PublicListener/ECSGroup/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                              "aws:cdk:cloudformation:props": {
                                "healthCheckIntervalSeconds": -1.8881545897088955e+289,
                                "healthCheckPath": "${Token[TOKEN.674]}",
                                "healthCheckPort": "${Token[TOKEN.675]}",
                                "healthCheckProtocol": "${Token[TOKEN.676]}",
                                "healthCheckTimeoutSeconds": -1.8881545897088963e+289,
                                "healthyThresholdCount": -1.8881545897088965e+289,
                                "matcher": "<unresolved-lazy>",
                                "port": 80,
                                "protocol": "HTTP",
                                "targetGroupAttributes": "<unresolved-lazy>",
                                "targets": "<unresolved-lazy>",
                                "targetType": "${Token[TOKEN.671]}",
                                "unhealthyThresholdCount": -1.8881545897088968e+289,
                                "vpcId": "${Token[TOKEN.672]}"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "DNS": {
                "id": "DNS",
                "path": "tp-prisma-dev/prisma/DNS",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-prisma-dev/prisma/DNS/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                      "aws:cdk:cloudformation:props": {
                        "name": "prisma.typeparty.com.",
                        "type": "A",
                        "aliasTarget": {
                          "hostedZoneId": "${Token[TOKEN.657]}",
                          "dnsName": "${Token[TOKEN.658]}"
                        },
                        "hostedZoneId": "/hostedzone/Z1M48R5Z0AFHNH"
                      }
                    }
                  }
                }
              },
              "LoadBalancerDNS": {
                "id": "LoadBalancerDNS",
                "path": "tp-prisma-dev/prisma/LoadBalancerDNS"
              },
              "ServiceURL": {
                "id": "ServiceURL",
                "path": "tp-prisma-dev/prisma/ServiceURL"
              },
              "TaskDef": {
                "id": "TaskDef",
                "path": "tp-prisma-dev/prisma/TaskDef",
                "children": {
                  "TaskRole": {
                    "id": "TaskRole",
                    "path": "tp-prisma-dev/prisma/TaskDef/TaskRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-prisma-dev/prisma/TaskDef/TaskRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "${Token[ecs-tasks.amazonaws.com.692]}"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              "#{Token[TOKEN.693]}"
                            ],
                            "roleName": "${Token[TOKEN.691]}"
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "tp-prisma-dev/prisma/TaskDef/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                      "aws:cdk:cloudformation:props": {
                        "containerDefinitions": "<unresolved-lazy>",
                        "executionRoleArn": "${Token[TOKEN.700]}",
                        "family": "tpprismadevprismaTaskDefCB2EE977",
                        "networkMode": "bridge",
                        "placementConstraints": "<unresolved-lazy>",
                        "requiresCompatibilities": [
                          "EC2"
                        ],
                        "taskRoleArn": "${Token[TOKEN.697]}",
                        "volumes": "<unresolved-lazy>"
                      }
                    }
                  },
                  "web": {
                    "id": "web",
                    "path": "tp-prisma-dev/prisma/TaskDef/web",
                    "children": {
                      "LogGroup": {
                        "id": "LogGroup",
                        "path": "tp-prisma-dev/prisma/TaskDef/web/LogGroup",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-prisma-dev/prisma/TaskDef/web/LogGroup/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                              "aws:cdk:cloudformation:props": {
                                "logGroupName": "${Token[TOKEN.703]}"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "ExecutionRole": {
                    "id": "ExecutionRole",
                    "path": "tp-prisma-dev/prisma/TaskDef/ExecutionRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "tp-prisma-dev/prisma/TaskDef/ExecutionRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "${Token[ecs-tasks.amazonaws.com.710]}"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              "#{Token[TOKEN.711]}"
                            ],
                            "roleName": "${Token[TOKEN.709]}"
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "tp-prisma-dev/prisma/TaskDef/ExecutionRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "tp-prisma-dev/prisma/TaskDef/ExecutionRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "${Token[TOKEN.706]}"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "${Token[TOKEN.718]}",
                                "groups": [
                                  "#{Token[TOKEN.721]}"
                                ],
                                "roles": [
                                  "#{Token[TOKEN.719]}"
                                ],
                                "users": [
                                  "#{Token[TOKEN.720]}"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Service": {
                "id": "Service",
                "path": "tp-prisma-dev/prisma/Service",
                "children": {
                  "Service": {
                    "id": "Service",
                    "path": "tp-prisma-dev/prisma/Service/Service",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                      "aws:cdk:cloudformation:props": {
                        "taskDefinition": "${Token[TOKEN.702]}",
                        "cluster": "${Token[TOKEN.570]}",
                        "deploymentConfiguration": {
                          "maximumPercent": 200,
                          "minimumHealthyPercent": 50
                        },
                        "desiredCount": 1,
                        "enableEcsManagedTags": false,
                        "healthCheckGracePeriodSeconds": "<unresolved-lazy>",
                        "launchType": "EC2",
                        "loadBalancers": "<unresolved-lazy>",
                        "networkConfiguration": "<unresolved-lazy>",
                        "placementConstraints": "<unresolved-lazy>",
                        "placementStrategies": "<unresolved-lazy>",
                        "schedulingStrategy": "REPLICA",
                        "serviceName": "${Token[TOKEN.723]}",
                        "serviceRegistries": "<unresolved-lazy>"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}